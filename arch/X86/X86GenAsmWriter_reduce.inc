/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Assembly Writer Source Fragment                                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/* Capstone Disassembly Engine, http://www.capstone-engine.org */
/* By Nguyen Anh Quynh <aquynh@gmail.com>, 2013> */

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
static void printInstruction(MCInst *MI, SStream *O, MCRegisterInfo *MRI)
{
  static const uint32_t OpInfo[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// PROLOG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    4883U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    4876U,	// BUNDLE
    4939U,	// LIFETIME_START
    4863U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// PATCHPOINT
    4954U,	// AAA
    8453U,	// AAD8i8
    9406U,	// AAM8i8
    5494U,	// AAS
    4567U,	// ACQUIRE_MOV16rm
    4567U,	// ACQUIRE_MOV32rm
    4567U,	// ACQUIRE_MOV64rm
    4567U,	// ACQUIRE_MOV8rm
    534671U,	// ADC16i16
    1067151U,	// ADC16mi
    1067151U,	// ADC16mi8
    1067151U,	// ADC16mr
    1599631U,	// ADC16ri
    1599631U,	// ADC16ri8
    1607823U,	// ADC16rm
    1599631U,	// ADC16rr
    2123919U,	// ADC16rr_REV
    2630113U,	// ADC32i32
    3162593U,	// ADC32mi
    3162593U,	// ADC32mi8
    3162593U,	// ADC32mr
    1597921U,	// ADC32ri
    1597921U,	// ADC32ri8
    1614305U,	// ADC32rm
    1597921U,	// ADC32rr
    2122209U,	// ADC32rr_REV
    3679555U,	// ADC64i32
    4212035U,	// ADC64mi32
    4212035U,	// ADC64mi8
    4212035U,	// ADC64mr
    1598787U,	// ADC64ri32
    1598787U,	// ADC64ri8
    1623363U,	// ADC64rm
    1598787U,	// ADC64rr
    2123075U,	// ADC64rr_REV
    4726830U,	// ADC8i8
    5259310U,	// ADC8mi
    5259310U,	// ADC8mr
    1597486U,	// ADC8ri
    57390U,	// ADC8rm
    1597486U,	// ADC8rr
    2121774U,	// ADC8rr_REV
    66701U,	// ADCX32rm
    2172045U,	// ADCX32rr
    83915U,	// ADCX64rm
    2172875U,	// ADCX64rr
    534696U,	// ADD16i16
    1067176U,	// ADD16mi
    1067176U,	// ADD16mi8
    1067176U,	// ADD16mr
    1599656U,	// ADD16ri
    1599656U,	// ADD16ri8
    0U,	// ADD16ri8_DB
    0U,	// ADD16ri_DB
    1607848U,	// ADD16rm
    1599656U,	// ADD16rr
    0U,	// ADD16rr_DB
    2123944U,	// ADD16rr_REV
    2630147U,	// ADD32i32
    3162627U,	// ADD32mi
    3162627U,	// ADD32mi8
    3162627U,	// ADD32mr
    1597955U,	// ADD32ri
    1597955U,	// ADD32ri8
    0U,	// ADD32ri8_DB
    0U,	// ADD32ri_DB
    1614339U,	// ADD32rm
    1597955U,	// ADD32rr
    0U,	// ADD32rr_DB
    2122243U,	// ADD32rr_REV
    3679589U,	// ADD64i32
    4212069U,	// ADD64mi32
    4212069U,	// ADD64mi8
    4212069U,	// ADD64mr
    1598821U,	// ADD64ri32
    0U,	// ADD64ri32_DB
    1598821U,	// ADD64ri8
    0U,	// ADD64ri8_DB
    1623397U,	// ADD64rm
    1598821U,	// ADD64rr
    0U,	// ADD64rr_DB
    2123109U,	// ADD64rr_REV
    4726849U,	// ADD8i8
    5259329U,	// ADD8mi
    5259329U,	// ADD8mr
    1597505U,	// ADD8ri
    57409U,	// ADD8rm
    1597505U,	// ADD8rr
    2121793U,	// ADD8rr_REV
    4893U,	// ADJCALLSTACKDOWN32
    4893U,	// ADJCALLSTACKDOWN64
    4911U,	// ADJCALLSTACKUP32
    4911U,	// ADJCALLSTACKUP64
    66722U,	// ADOX32rm
    2172066U,	// ADOX32rr
    83936U,	// ADOX64rm
    2172896U,	// ADOX64rr
    534721U,	// AND16i16
    1067201U,	// AND16mi
    1067201U,	// AND16mi8
    1067201U,	// AND16mr
    1599681U,	// AND16ri
    1599681U,	// AND16ri8
    1607873U,	// AND16rm
    1599681U,	// AND16rr
    2123969U,	// AND16rr_REV
    2630172U,	// AND32i32
    3162652U,	// AND32mi
    3162652U,	// AND32mi8
    3162652U,	// AND32mr
    1597980U,	// AND32ri
    1597980U,	// AND32ri8
    1614364U,	// AND32rm
    1597980U,	// AND32rr
    2122268U,	// AND32rr_REV
    3679614U,	// AND64i32
    4212094U,	// AND64mi32
    4212094U,	// AND64mi8
    4212094U,	// AND64mr
    1598846U,	// AND64ri32
    1598846U,	// AND64ri8
    1623422U,	// AND64rm
    1598846U,	// AND64rr
    2123134U,	// AND64rr_REV
    4726855U,	// AND8i8
    5259335U,	// AND8mi
    5259335U,	// AND8mr
    1597511U,	// AND8ri
    57415U,	// AND8rm
    1597511U,	// AND8rr
    2121799U,	// AND8rr_REV
    18391829U,	// ANDN32rm
    18375445U,	// ANDN32rr
    18400880U,	// ANDN64rm
    18376304U,	// ANDN64rr
    1065827U,	// ARPL16mr
    2171747U,	// ARPL16rr
    3469U,	// ATOMADD6432
    4249U,	// ATOMAND16
    3682U,	// ATOMAND32
    3936U,	// ATOMAND64
    3490U,	// ATOMAND6432
    4403U,	// ATOMAND8
    4364U,	// ATOMMAX16
    3897U,	// ATOMMAX32
    4210U,	// ATOMMAX64
    3639U,	// ATOMMAX6432
    4530U,	// ATOMMAX8
    4288U,	// ATOMMIN16
    3782U,	// ATOMMIN32
    4095U,	// ATOMMIN64
    3533U,	// ATOMMIN6432
    4440U,	// ATOMMIN8
    4268U,	// ATOMNAND16
    3701U,	// ATOMNAND32
    3955U,	// ATOMNAND64
    3511U,	// ATOMNAND6432
    4421U,	// ATOMNAND8
    4327U,	// ATOMOR16
    3860U,	// ATOMOR32
    4173U,	// ATOMOR64
    3598U,	// ATOMOR6432
    4495U,	// ATOMOR8
    3448U,	// ATOMSUB6432
    3576U,	// ATOMSWAP6432
    4383U,	// ATOMUMAX16
    3916U,	// ATOMUMAX32
    4229U,	// ATOMUMAX64
    3660U,	// ATOMUMAX6432
    4548U,	// ATOMUMAX8
    4307U,	// ATOMUMIN16
    3801U,	// ATOMUMIN32
    4114U,	// ATOMUMIN64
    3554U,	// ATOMUMIN6432
    4458U,	// ATOMUMIN8
    4345U,	// ATOMXOR16
    3878U,	// ATOMXOR32
    4191U,	// ATOMXOR64
    3618U,	// ATOMXOR6432
    4512U,	// ATOMXOR8
    5858222U,	// BEXTR32rm
    18375598U,	// BEXTR32rr
    6383354U,	// BEXTR64rm
    18376442U,	// BEXTR64rr
    5859354U,	// BEXTRI32mi
    18376730U,	// BEXTRI32ri
    6383642U,	// BEXTRI64mi
    18376730U,	// BEXTRI64ri
    66272U,	// BLCFILL32rm
    2171616U,	// BLCFILL32rr
    82656U,	// BLCFILL64rm
    2171616U,	// BLCFILL64rr
    65946U,	// BLCI32rm
    2171290U,	// BLCI32rr
    82330U,	// BLCI64rm
    2171290U,	// BLCI64rr
    65775U,	// BLCIC32rm
    2171119U,	// BLCIC32rr
    82159U,	// BLCIC64rm
    2171119U,	// BLCIC64rr
    65952U,	// BLCMSK32rm
    2171296U,	// BLCMSK32rr
    82336U,	// BLCMSK64rm
    2171296U,	// BLCMSK64rr
    67617U,	// BLCS32rm
    2172961U,	// BLCS32rr
    84001U,	// BLCS64rm
    2172961U,	// BLCS64rr
    66281U,	// BLSFILL32rm
    2171625U,	// BLSFILL32rr
    82665U,	// BLSFILL64rm
    2171625U,	// BLSFILL64rr
    66240U,	// BLSI32rm
    2171584U,	// BLSI32rr
    83498U,	// BLSI64rm
    2172458U,	// BLSI64rr
    65782U,	// BLSIC32rm
    2171126U,	// BLSIC32rr
    82166U,	// BLSIC64rm
    2171126U,	// BLSIC64rr
    66251U,	// BLSMSK32rm
    2171595U,	// BLSMSK32rr
    83505U,	// BLSMSK64rm
    2172465U,	// BLSMSK64rr
    66459U,	// BLSR32rm
    2171803U,	// BLSR32rr
    83687U,	// BLSR64rm
    2172647U,	// BLSR64rr
    98597U,	// BOUNDS16rm
    65829U,	// BOUNDS32rm
    100611U,	// BSF16rm
    2173187U,	// BSF16rr
    66196U,	// BSF32rm
    2171540U,	// BSF32rr
    83454U,	// BSF64rm
    2172414U,	// BSF64rr
    100801U,	// BSR16rm
    2173377U,	// BSR16rr
    66453U,	// BSR32rm
    2171797U,	// BSR32rr
    83681U,	// BSR64rm
    2172641U,	// BSR64rr
    9010U,	// BSWAP32r
    9864U,	// BSWAP64r
    1067571U,	// BT16mi8
    1067571U,	// BT16mr
    2173491U,	// BT16ri8
    2173491U,	// BT16rr
    3163152U,	// BT32mi8
    3163152U,	// BT32mr
    2171920U,	// BT32ri8
    2171920U,	// BT32rr
    4212553U,	// BT64mi8
    4212553U,	// BT64mr
    2172745U,	// BT64ri8
    2172745U,	// BT64rr
    1067169U,	// BTC16mi8
    1067169U,	// BTC16mr
    2173089U,	// BTC16ri8
    2173089U,	// BTC16rr
    3162611U,	// BTC32mi8
    3162611U,	// BTC32mr
    2171379U,	// BTC32ri8
    2171379U,	// BTC32rr
    4212053U,	// BTC64mi8
    4212053U,	// BTC64mr
    2172245U,	// BTC64ri8
    2172245U,	// BTC64rr
    1067463U,	// BTR16mi8
    1067463U,	// BTR16mr
    2173383U,	// BTR16ri8
    2173383U,	// BTR16rr
    3163042U,	// BTR32mi8
    3163042U,	// BTR32mr
    2171810U,	// BTR32ri8
    2171810U,	// BTR32rr
    4212462U,	// BTR64mi8
    4212462U,	// BTR64mr
    2172654U,	// BTR64ri8
    2172654U,	// BTR64rr
    1067550U,	// BTS16mi8
    1067550U,	// BTS16mr
    2173470U,	// BTS16ri8
    2173470U,	// BTS16rr
    3163131U,	// BTS32mi8
    3163131U,	// BTS32mr
    2171899U,	// BTS32ri8
    2171899U,	// BTS32rr
    4212539U,	// BTS64mi8
    4212539U,	// BTS64mr
    2172731U,	// BTS64ri8
    2172731U,	// BTS64rr
    5857977U,	// BZHI32rm
    18375353U,	// BZHI32rr
    6383139U,	// BZHI64rm
    18376227U,	// BZHI64rr
    111140U,	// CALL16m
    12836U,	// CALL16r
    119298U,	// CALL32m
    12802U,	// CALL32r
    127507U,	// CALL64m
    132678U,	// CALL64pcrel32
    12819U,	// CALL64r
    133429U,	// CALLpcrel16
    131827U,	// CALLpcrel32
    5871U,	// CBW
    5096U,	// CDQ
    5458U,	// CDQE
    5023U,	// CLAC
    5055U,	// CLC
    5092U,	// CLD
    5171U,	// CLGI
    5181U,	// CLI
    5802U,	// CLTS
    5059U,	// CMC
    2132067U,	// CMOVA16rm
    2123875U,	// CMOVA16rr
    2138549U,	// CMOVA32rm
    2122165U,	// CMOVA32rr
    2147607U,	// CMOVA64rm
    2123031U,	// CMOVA64rr
    2132174U,	// CMOVAE16rm
    2123982U,	// CMOVAE16rr
    2138665U,	// CMOVAE32rm
    2122281U,	// CMOVAE32rr
    2147723U,	// CMOVAE64rm
    2123147U,	// CMOVAE64rr
    2132095U,	// CMOVB16rm
    2123903U,	// CMOVB16rr
    2138577U,	// CMOVB32rm
    2122193U,	// CMOVB32rr
    2147635U,	// CMOVB64rm
    2123059U,	// CMOVB64rr
    2132183U,	// CMOVBE16rm
    2123991U,	// CMOVBE16rr
    2138674U,	// CMOVBE32rm
    2122290U,	// CMOVBE32rr
    2147732U,	// CMOVBE64rm
    2123156U,	// CMOVBE64rr
    2132219U,	// CMOVE16rm
    2124027U,	// CMOVE16rr
    2138764U,	// CMOVE32rm
    2122380U,	// CMOVE32rr
    2147830U,	// CMOVE64rm
    2123254U,	// CMOVE64rr
    2132249U,	// CMOVG16rm
    2124057U,	// CMOVG16rr
    2138794U,	// CMOVG32rm
    2122410U,	// CMOVG32rr
    2147860U,	// CMOVG64rm
    2123284U,	// CMOVG64rr
    2132192U,	// CMOVGE16rm
    2124000U,	// CMOVGE16rr
    2138683U,	// CMOVGE32rm
    2122299U,	// CMOVGE32rr
    2147741U,	// CMOVGE64rm
    2123165U,	// CMOVGE64rr
    2132303U,	// CMOVL16rm
    2124111U,	// CMOVL16rr
    2138893U,	// CMOVL32rm
    2122509U,	// CMOVL32rr
    2147944U,	// CMOVL64rm
    2123368U,	// CMOVL64rr
    2132201U,	// CMOVLE16rm
    2124009U,	// CMOVLE16rr
    2138692U,	// CMOVLE32rm
    2122308U,	// CMOVLE32rr
    2147750U,	// CMOVLE64rm
    2123174U,	// CMOVLE64rr
    2132210U,	// CMOVNE16rm
    2124018U,	// CMOVNE16rr
    2138701U,	// CMOVNE32rm
    2122317U,	// CMOVNE32rr
    2147759U,	// CMOVNE64rm
    2123183U,	// CMOVNE64rr
    2132316U,	// CMOVNO16rm
    2124124U,	// CMOVNO16rr
    2138913U,	// CMOVNO32rm
    2122529U,	// CMOVNO32rr
    2147959U,	// CMOVNO64rm
    2123383U,	// CMOVNO64rr
    2132346U,	// CMOVNP16rm
    2124154U,	// CMOVNP16rr
    2138958U,	// CMOVNP32rm
    2122574U,	// CMOVNP32rr
    2147997U,	// CMOVNP64rm
    2123421U,	// CMOVNP64rr
    2132488U,	// CMOVNS16rm
    2124296U,	// CMOVNS16rr
    2139109U,	// CMOVNS32rm
    2122725U,	// CMOVNS32rr
    2148133U,	// CMOVNS64rm
    2123557U,	// CMOVNS64rr
    2132325U,	// CMOVO16rm
    2124133U,	// CMOVO16rr
    2138922U,	// CMOVO32rm
    2122538U,	// CMOVO32rr
    2147968U,	// CMOVO64rm
    2123392U,	// CMOVO64rr
    2132367U,	// CMOVP16rm
    2124175U,	// CMOVP16rr
    2138985U,	// CMOVP32rm
    2122601U,	// CMOVP32rr
    2148012U,	// CMOVP64rm
    2123436U,	// CMOVP64rr
    2132523U,	// CMOVS16rm
    2124331U,	// CMOVS16rr
    2139144U,	// CMOVS32rm
    2122760U,	// CMOVS32rr
    2148161U,	// CMOVS64rm
    2123585U,	// CMOVS64rr
    3841U,	// CMOV_FR32
    4154U,	// CMOV_FR64
    3408U,	// CMOV_GR16
    3388U,	// CMOV_GR32
    4477U,	// CMOV_GR8
    3821U,	// CMOV_RFP32
    4134U,	// CMOV_RFP64
    3428U,	// CMOV_RFP80
    3741U,	// CMOV_V16F32
    3975U,	// CMOV_V2F64
    4035U,	// CMOV_V2I64
    3721U,	// CMOV_V4F32
    3995U,	// CMOV_V4F64
    4055U,	// CMOV_V4I64
    3762U,	// CMOV_V8F32
    4015U,	// CMOV_V8F64
    4075U,	// CMOV_V8I64
    534893U,	// CMP16i16
    1067373U,	// CMP16mi
    1067373U,	// CMP16mi8
    1067373U,	// CMP16mr
    2173293U,	// CMP16ri
    2173293U,	// CMP16ri8
    100717U,	// CMP16rm
    2173293U,	// CMP16rr
    2173293U,	// CMP16rr_REV
    2630465U,	// CMP32i32
    3162945U,	// CMP32mi
    3162945U,	// CMP32mi8
    3162945U,	// CMP32mr
    2171713U,	// CMP32ri
    2171713U,	// CMP32ri8
    66369U,	// CMP32rm
    2171713U,	// CMP32rr
    2171713U,	// CMP32rr_REV
    3679895U,	// CMP64i32
    4212375U,	// CMP64mi32
    4212375U,	// CMP64mi8
    4212375U,	// CMP64mr
    2172567U,	// CMP64ri32
    2172567U,	// CMP64ri8
    83607U,	// CMP64rm
    2172567U,	// CMP64rr
    2172567U,	// CMP64rr_REV
    4726911U,	// CMP8i8
    5259391U,	// CMP8mi
    5259391U,	// CMP8mr
    2171007U,	// CMP8ri
    139391U,	// CMP8rm
    2171007U,	// CMP8rr
    2171007U,	// CMP8rr_REV
    40520209U,	// CMPS16
    57304046U,	// CMPS32
    74090286U,	// CMPS64
    90874042U,	// CMPS8
    180235U,	// CMPXCHG16B
    1067279U,	// CMPXCHG16rm
    2173199U,	// CMPXCHG16rr
    3162784U,	// CMPXCHG32rm
    2171552U,	// CMPXCHG32rr
    4212234U,	// CMPXCHG64rm
    2172426U,	// CMPXCHG64rr
    122903U,	// CMPXCHG8B
    5259347U,	// CMPXCHG8rm
    2170963U,	// CMPXCHG8rr
    5086U,	// CPUID32
    5086U,	// CPUID64
    5376U,	// CQO
    5509U,	// CS_PREFIX
    5105U,	// CWD
    5320U,	// CWDE
    4958U,	// DAA
    5498U,	// DAS
    4848U,	// DATA16_PREFIX
    108693U,	// DEC16m
    10389U,	// DEC16r
    10389U,	// DEC32_16r
    8679U,	// DEC32_32r
    115175U,	// DEC32m
    8679U,	// DEC32r
    108693U,	// DEC64_16m
    10389U,	// DEC64_16r
    115175U,	// DEC64_32m
    8679U,	// DEC64_32r
    124233U,	// DEC64m
    9545U,	// DEC64r
    188468U,	// DEC8m
    8244U,	// DEC8r
    109191U,	// DIV16m
    10887U,	// DIV16r
    115818U,	// DIV32m
    9322U,	// DIV32r
    124840U,	// DIV64m
    10152U,	// DIV64r
    188643U,	// DIV8m
    8419U,	// DIV8r
    5529U,	// DS_PREFIX
    11533U,	// EH_RETURN
    11533U,	// EH_RETURN64
    4671U,	// EH_SjLj_LongJmp32
    4761U,	// EH_SjLj_LongJmp64
    4690U,	// EH_SjLj_SetJmp32
    4780U,	// EH_SjLj_SetJmp64
    132353U,	// EH_SjLj_Setup
    107489285U,	// ENTER
    5567U,	// ES_PREFIX
    2173236U,	// FARCALL16i
    201251U,	// FARCALL16m
    2171634U,	// FARCALL32i
    201217U,	// FARCALL32m
    201234U,	// FARCALL64
    2173299U,	// FARJMP16i
    201260U,	// FARJMP16m
    2171719U,	// FARJMP32i
    201226U,	// FARJMP32m
    201243U,	// FARJMP64
    5333U,	// FSETPM
    5605U,	// FS_PREFIX
    5043U,	// GETSEC
    5662U,	// GS_PREFIX
    5807U,	// HLT
    109190U,	// IDIV16m
    10886U,	// IDIV16r
    115817U,	// IDIV32m
    9321U,	// IDIV32r
    124839U,	// IDIV64m
    10151U,	// IDIV64r
    188642U,	// IDIV8m
    8418U,	// IDIV8r
    108872U,	// IMUL16m
    10568U,	// IMUL16r
    2132296U,	// IMUL16rm
    7432520U,	// IMUL16rmi
    7432520U,	// IMUL16rmi8
    2124104U,	// IMUL16rr
    18377032U,	// IMUL16rri
    18377032U,	// IMUL16rri8
    115462U,	// IMUL32m
    8966U,	// IMUL32r
    2138886U,	// IMUL32rm
    5858054U,	// IMUL32rmi
    5858054U,	// IMUL32rmi8
    2122502U,	// IMUL32rr
    18375430U,	// IMUL32rri
    18375430U,	// IMUL32rri8
    124513U,	// IMUL64m
    9825U,	// IMUL64r
    2147937U,	// IMUL64rm
    6383201U,	// IMUL64rmi32
    6383201U,	// IMUL64rmi8
    2123361U,	// IMUL64rr
    18376289U,	// IMUL64rri32
    18376289U,	// IMUL64rri8
    188531U,	// IMUL8m
    8307U,	// IMUL8r
    150775U,	// IN16
    534871U,	// IN16ri
    5888U,	// IN16rr
    158956U,	// IN32
    2630428U,	// IN32ri
    5967U,	// IN32rr
    175329U,	// IN8
    4726906U,	// IN8ri
    5209U,	// IN8rr
    108699U,	// INC16m
    10395U,	// INC16r
    10395U,	// INC32_16r
    8685U,	// INC32_32r
    115181U,	// INC32m
    8685U,	// INC32r
    108699U,	// INC64_16m
    10395U,	// INC64_16r
    115181U,	// INC64_32m
    8685U,	// INC64_32r
    124239U,	// INC64m
    9551U,	// INC64r
    188474U,	// INC8m
    8250U,	// INC8r
    10301U,	// INT
    4666U,	// INT1
    4756U,	// INT3
    5371U,	// INTO
    5112U,	// INVD
    206914U,	// INVEPT32
    206914U,	// INVEPT64
    188812U,	// INVLPG
    5948U,	// INVLPGA32
    6016U,	// INVLPGA64
    205066U,	// INVPCID32
    205066U,	// INVPCID64
    205075U,	// INVVPID32
    205075U,	// INVVPID64
    5876U,	// IRET16
    5291U,	// IRET32
    5429U,	// IRET64
    4927U,	// Int_MemBarrier
    131372U,	// JAE_1
    131372U,	// JAE_2
    131372U,	// JAE_4
    131073U,	// JA_1
    131073U,	// JA_2
    131073U,	// JA_4
    131384U,	// JBE_1
    131384U,	// JBE_2
    131384U,	// JBE_4
    131165U,	// JB_1
    131165U,	// JB_2
    131165U,	// JB_4
    133800U,	// JCXZ
    133793U,	// JECXZ_32
    133793U,	// JECXZ_64
    131408U,	// JE_1
    131408U,	// JE_2
    131408U,	// JE_4
    131396U,	// JGE_1
    131396U,	// JGE_2
    131396U,	// JGE_4
    131464U,	// JG_1
    131464U,	// JG_2
    131464U,	// JG_4
    131412U,	// JLE_1
    131412U,	// JLE_2
    131412U,	// JLE_4
    131783U,	// JL_1
    131783U,	// JL_2
    131783U,	// JL_4
    111149U,	// JMP16m
    12845U,	// JMP16r
    119307U,	// JMP32m
    12811U,	// JMP32r
    127516U,	// JMP64m
    12828U,	// JMP64r
    132324U,	// JMP_1
    132324U,	// JMP_2
    132324U,	// JMP_4
    131424U,	// JNE_1
    131424U,	// JNE_2
    131424U,	// JNE_4
    132302U,	// JNO_1
    132302U,	// JNO_2
    132302U,	// JNO_4
    132329U,	// JNP_1
    132329U,	// JNP_2
    132329U,	// JNP_4
    133163U,	// JNS_1
    133163U,	// JNS_2
    133163U,	// JNS_4
    132298U,	// JO_1
    132298U,	// JO_2
    132298U,	// JO_4
    132320U,	// JP_1
    132320U,	// JP_2
    132320U,	// JP_4
    133806U,	// JRCXZ
    133159U,	// JS_1
    133159U,	// JS_2
    133159U,	// JS_4
    5152U,	// LAHF
    100759U,	// LAR16rm
    2173335U,	// LAR16rr
    99185U,	// LAR32rm
    2171761U,	// LAR32rr
    100020U,	// LAR64rm
    2172596U,	// LAR64rr
    1067279U,	// LCMPXCHG16
    180235U,	// LCMPXCHG16B
    3162784U,	// LCMPXCHG32
    4212234U,	// LCMPXCHG64
    5259347U,	// LCMPXCHG8
    122903U,	// LCMPXCHG8B
    215529U,	// LDS16rm
    213958U,	// LDS32rm
    67677U,	// LEA16r
    65967U,	// LEA32r
    65967U,	// LEA64_32r
    83217U,	// LEA64r
    5139U,	// LEAVE
    5139U,	// LEAVE64
    215542U,	// LES16rm
    213971U,	// LES32rm
    215548U,	// LFS16rm
    213977U,	// LFS32rm
    214809U,	// LFS64rm
    199224U,	// LGDT16m
    197653U,	// LGDT32m
    198478U,	// LGDT64m
    215554U,	// LGS16rm
    213983U,	// LGS32rm
    214815U,	// LGS64rm
    199238U,	// LIDT16m
    197667U,	// LIDT32m
    198492U,	// LIDT64m
    109140U,	// LLDT16m
    10836U,	// LLDT16r
    109203U,	// LMSW16m
    10899U,	// LMSW16r
    1067176U,	// LOCK_ADD16mi
    1067176U,	// LOCK_ADD16mi8
    1067176U,	// LOCK_ADD16mr
    3162627U,	// LOCK_ADD32mi
    3162627U,	// LOCK_ADD32mi8
    3162627U,	// LOCK_ADD32mr
    4212069U,	// LOCK_ADD64mi32
    4212069U,	// LOCK_ADD64mi8
    4212069U,	// LOCK_ADD64mr
    5259329U,	// LOCK_ADD8mi
    5259329U,	// LOCK_ADD8mr
    1067201U,	// LOCK_AND16mi
    1067201U,	// LOCK_AND16mi8
    1067201U,	// LOCK_AND16mr
    3162652U,	// LOCK_AND32mi
    3162652U,	// LOCK_AND32mi8
    3162652U,	// LOCK_AND32mr
    4212094U,	// LOCK_AND64mi32
    4212094U,	// LOCK_AND64mi8
    4212094U,	// LOCK_AND64mr
    5259335U,	// LOCK_AND8mi
    5259335U,	// LOCK_AND8mr
    108693U,	// LOCK_DEC16m
    115175U,	// LOCK_DEC32m
    124233U,	// LOCK_DEC64m
    188468U,	// LOCK_DEC8m
    108699U,	// LOCK_INC16m
    115181U,	// LOCK_INC32m
    124239U,	// LOCK_INC64m
    188474U,	// LOCK_INC8m
    1067446U,	// LOCK_OR16mi
    1067446U,	// LOCK_OR16mi8
    1067446U,	// LOCK_OR16mr
    3163018U,	// LOCK_OR32mi
    3163018U,	// LOCK_OR32mi8
    3163018U,	// LOCK_OR32mr
    4212429U,	// LOCK_OR64mi32
    4212429U,	// LOCK_OR64mi8
    4212429U,	// LOCK_OR64mr
    5259416U,	// LOCK_OR8mi
    5259416U,	// LOCK_OR8mr
    5204U,	// LOCK_PREFIX
    1067129U,	// LOCK_SUB16mi
    1067129U,	// LOCK_SUB16mi8
    1067129U,	// LOCK_SUB16mr
    3162571U,	// LOCK_SUB32mi
    3162571U,	// LOCK_SUB32mi8
    3162571U,	// LOCK_SUB32mr
    4212013U,	// LOCK_SUB64mi32
    4212013U,	// LOCK_SUB64mi8
    4212013U,	// LOCK_SUB64mr
    5259304U,	// LOCK_SUB8mi
    5259304U,	// LOCK_SUB8mr
    1067451U,	// LOCK_XOR16mi
    1067451U,	// LOCK_XOR16mi8
    1067451U,	// LOCK_XOR16mr
    3163023U,	// LOCK_XOR32mi
    3163023U,	// LOCK_XOR32mi8
    3163023U,	// LOCK_XOR32mr
    4212443U,	// LOCK_XOR64mi32
    4212443U,	// LOCK_XOR64mi8
    4212443U,	// LOCK_XOR64mr
    5259421U,	// LOCK_XOR8mi
    5259421U,	// LOCK_XOR8mr
    4939955U,	// LODSB
    2851788U,	// LODSL
    239378U,	// LODSQ
    772591U,	// LODSW
    132341U,	// LOOP
    131444U,	// LOOPE
    131429U,	// LOOPNE
    9272U,	// LRETIL
    10097U,	// LRETIQ
    10850U,	// LRETIW
    5297U,	// LRETL
    5435U,	// LRETQ
    5882U,	// LRETW
    100674U,	// LSL16rm
    2173250U,	// LSL16rr
    66304U,	// LSL32rm
    2171648U,	// LSL32rr
    83539U,	// LSL64rm
    2172499U,	// LSL64rr
    215576U,	// LSS16rm
    214005U,	// LSS32rm
    214837U,	// LSS64rm
    109005U,	// LTRm
    10701U,	// LTRr
    7940263U,	// LXADD16
    8462850U,	// LXADD32
    8988004U,	// LXADD64
    9510976U,	// LXADD8
    100969U,	// LZCNT16rm
    2173545U,	// LZCNT16rr
    66629U,	// LZCNT32rm
    2171973U,	// LZCNT32rr
    83832U,	// LZCNT64rm
    2172792U,	// LZCNT64rr
    5325U,	// MONTMUL
    0U,	// MORESTACK_RET
    0U,	// MORESTACK_RET_RESTORE_R10
    257158U,	// MOV16ao16
    257158U,	// MOV16ao16_16
    1067661U,	// MOV16mi
    1067661U,	// MOV16mr
    1067661U,	// MOV16ms
    780941U,	// MOV16o16a
    780941U,	// MOV16o16a_16
    2173581U,	// MOV16ri
    2173581U,	// MOV16ri_alt
    101005U,	// MOV16rm
    2173581U,	// MOV16rr
    2173581U,	// MOV16rr_REV
    2173581U,	// MOV16rs
    101005U,	// MOV16sm
    2173581U,	// MOV16sr
    265401U,	// MOV32ao32
    265401U,	// MOV32ao32_16
    2172016U,	// MOV32cr
    2172016U,	// MOV32dr
    3163248U,	// MOV32mi
    3163248U,	// MOV32mr
    3163248U,	// MOV32ms
    2884720U,	// MOV32o32a
    2884720U,	// MOV32o32a_16
    0U,	// MOV32r0
    2172016U,	// MOV32rc
    2172016U,	// MOV32rd
    2172016U,	// MOV32ri
    0U,	// MOV32ri64
    2172016U,	// MOV32ri_alt
    66672U,	// MOV32rm
    2172016U,	// MOV32rr
    2172016U,	// MOV32rr_REV
    2172016U,	// MOV32rs
    66672U,	// MOV32sm
    2172016U,	// MOV32sr
    257121U,	// MOV64ao16
    265361U,	// MOV64ao32
    273605U,	// MOV64ao64
    281269U,	// MOV64ao8
    2172846U,	// MOV64cr
    2172846U,	// MOV64dr
    4212654U,	// MOV64mi32
    4212654U,	// MOV64mr
    4212654U,	// MOV64ms
    780768U,	// MOV64o16a
    2884541U,	// MOV64o32a
    3942153U,	// MOV64o64a
    4997290U,	// MOV64o8a
    2172846U,	// MOV64rc
    2172846U,	// MOV64rd
    2172681U,	// MOV64ri
    2172846U,	// MOV64ri32
    83886U,	// MOV64rm
    2172846U,	// MOV64rr
    2172846U,	// MOV64rr_REV
    2172846U,	// MOV64rs
    83886U,	// MOV64sm
    2172846U,	// MOV64sr
    281306U,	// MOV8ao8
    281306U,	// MOV8ao8_16
    5259497U,	// MOV8mi
    5259497U,	// MOV8mr
    122700009U,	// MOV8mr_NOREX
    4997353U,	// MOV8o8a
    4997353U,	// MOV8o8a_16
    2171113U,	// MOV8ri
    2171113U,	// MOV8ri_alt
    139497U,	// MOV8rm
    10100969U,	// MOV8rm_NOREX
    2171113U,	// MOV8rr
    119611625U,	// MOV8rr_NOREX
    2171113U,	// MOV8rr_REV
    1067224U,	// MOVBE16mr
    100568U,	// MOVBE16rm
    3162675U,	// MOVBE32mr
    66099U,	// MOVBE32rm
    4212117U,	// MOVBE64mr
    83349U,	// MOVBE64rm
    0U,	// MOVPC32r
    286920U,	// MOVSB
    295945U,	// MOVSL
    304962U,	// MOVSQ
    313900U,	// MOVSW
    141425U,	// MOVSX16rm8
    2173041U,	// MOVSX16rr8
    99453U,	// MOVSX32rm16
    139715U,	// MOVSX32rm8
    2172029U,	// MOVSX32rr16
    2171331U,	// MOVSX32rr8
    100283U,	// MOVSX64rm16
    67161U,	// MOVSX64rm32
    140581U,	// MOVSX64rm8
    2172859U,	// MOVSX64rr16
    2172505U,	// MOVSX64rr32
    2172197U,	// MOVSX64rr8
    141447U,	// MOVZX16rm8
    2173063U,	// MOVZX16rr8
    139737U,	// MOVZX32_NOREXrm8
    2171353U,	// MOVZX32_NOREXrr8
    99461U,	// MOVZX32rm16
    139737U,	// MOVZX32rm8
    2172037U,	// MOVZX32rr16
    2171353U,	// MOVZX32rr8
    100291U,	// MOVZX64rm16_Q
    140603U,	// MOVZX64rm8_Q
    2172867U,	// MOVZX64rr16_Q
    2172219U,	// MOVZX64rr8_Q
    108873U,	// MUL16m
    10569U,	// MUL16r
    115463U,	// MUL32m
    8967U,	// MUL32r
    124514U,	// MUL64m
    9826U,	// MUL64r
    188532U,	// MUL8m
    8308U,	// MUL8r
    18392219U,	// MULX32rm
    18375835U,	// MULX32rr
    18401241U,	// MULX64rm
    18376665U,	// MULX64rr
    108809U,	// NEG16m
    10505U,	// NEG16r
    115354U,	// NEG32m
    8858U,	// NEG32r
    124420U,	// NEG64m
    9732U,	// NEG64r
    188493U,	// NEG8m
    8269U,	// NEG8r
    5392U,	// NOOP
    115543U,	// NOOPL
    108931U,	// NOOPW
    109177U,	// NOT16m
    10873U,	// NOT16r
    115797U,	// NOT32m
    9301U,	// NOT32r
    124808U,	// NOT64m
    10120U,	// NOT64r
    188629U,	// NOT8m
    8405U,	// NOT8r
    534966U,	// OR16i16
    1067446U,	// OR16mi
    1067446U,	// OR16mi8
    1067446U,	// OR16mr
    1599926U,	// OR16ri
    1599926U,	// OR16ri8
    1608118U,	// OR16rm
    1599926U,	// OR16rr
    2124214U,	// OR16rr_REV
    2630538U,	// OR32i32
    3163018U,	// OR32mi
    3163018U,	// OR32mi8
    3163018U,	// OR32mr
    3163018U,	// OR32mrLocked
    1598346U,	// OR32ri
    1598346U,	// OR32ri8
    1614730U,	// OR32rm
    1598346U,	// OR32rr
    2122634U,	// OR32rr_REV
    3679949U,	// OR64i32
    4212429U,	// OR64mi32
    4212429U,	// OR64mi8
    4212429U,	// OR64mr
    1599181U,	// OR64ri32
    1599181U,	// OR64ri8
    1623757U,	// OR64rm
    1599181U,	// OR64rr
    2123469U,	// OR64rr_REV
    4726936U,	// OR8i8
    5259416U,	// OR8mi
    5259416U,	// OR8mr
    1597592U,	// OR8ri
    57496U,	// OR8rm
    1597592U,	// OR8rr
    2121880U,	// OR8rr_REV
    11387U,	// OUT16ir
    6049U,	// OUT16rr
    11437U,	// OUT32ir
    6063U,	// OUT32rr
    10959U,	// OUT8ir
    6035U,	// OUT8rr
    10707137U,	// OUTSB
    10716161U,	// OUTSL
    10734116U,	// OUTSW
    18391866U,	// PDEP32rm
    18375482U,	// PDEP32rr
    18400912U,	// PDEP64rm
    18376336U,	// PDEP64rr
    18392162U,	// PEXT32rm
    18375778U,	// PEXT32rr
    18401184U,	// PEXT64rm
    18376608U,	// PEXT64rr
    10633U,	// POP16r
    108937U,	// POP16rmm
    10633U,	// POP16rmr
    9053U,	// POP32r
    115549U,	// POP32rmm
    9053U,	// POP32rmr
    9894U,	// POP64r
    124582U,	// POP64rmm
    9894U,	// POP64rmr
    5832U,	// POPA16
    5229U,	// POPA32
    5551U,	// POPDS16
    5532U,	// POPDS32
    5589U,	// POPES16
    5570U,	// POPES32
    5845U,	// POPF16
    5242U,	// POPF32
    5403U,	// POPF64
    5646U,	// POPFS16
    5608U,	// POPFS32
    5627U,	// POPFS64
    5703U,	// POPGS16
    5665U,	// POPGS32
    5684U,	// POPGS64
    5793U,	// POPSS16
    5774U,	// POPSS32
    10529U,	// PUSH16i8
    10529U,	// PUSH16r
    108833U,	// PUSH16rmm
    10529U,	// PUSH16rmr
    8882U,	// PUSH32i8
    8882U,	// PUSH32r
    115378U,	// PUSH32rmm
    8882U,	// PUSH32rmr
    10529U,	// PUSH64i16
    9756U,	// PUSH64i32
    9756U,	// PUSH64i8
    9756U,	// PUSH64r
    124444U,	// PUSH64rmm
    9756U,	// PUSH64rmr
    5825U,	// PUSHA16
    5222U,	// PUSHA32
    5512U,	// PUSHCS16
    5502U,	// PUSHCS32
    5541U,	// PUSHDS16
    5522U,	// PUSHDS32
    5579U,	// PUSHES16
    5560U,	// PUSHES32
    5838U,	// PUSHF16
    5235U,	// PUSHF32
    5396U,	// PUSHF64
    5636U,	// PUSHFS16
    5598U,	// PUSHFS32
    5617U,	// PUSHFS64
    5693U,	// PUSHGS16
    5655U,	// PUSHGS32
    5674U,	// PUSHGS64
    5783U,	// PUSHSS16
    5764U,	// PUSHSS32
    10529U,	// PUSHi16
    8882U,	// PUSHi32
    108840U,	// RCL16m1
    109588U,	// RCL16mCL
    1067304U,	// RCL16mi
    10536U,	// RCL16r1
    11284U,	// RCL16rCL
    2124072U,	// RCL16ri
    115412U,	// RCL32m1
    117578U,	// RCL32mCL
    3162836U,	// RCL32mi
    8916U,	// RCL32r1
    11082U,	// RCL32rCL
    2122452U,	// RCL32ri
    124474U,	// RCL64m1
    125871U,	// RCL64mCL
    4212282U,	// RCL64mi
    9786U,	// RCL64r1
    11183U,	// RCL64rCL
    2123322U,	// RCL64ri
    188513U,	// RCL8m1
    191205U,	// RCL8mCL
    5259361U,	// RCL8mi
    8289U,	// RCL8r1
    10981U,	// RCL8rCL
    2121825U,	// RCL8ri
    108963U,	// RCR16m1
    109632U,	// RCR16mCL
    1067427U,	// RCR16mi
    10659U,	// RCR16r1
    11328U,	// RCR16rCL
    2124195U,	// RCR16ri
    115581U,	// RCR32m1
    117622U,	// RCR32mCL
    3163005U,	// RCR32mi
    9085U,	// RCR32r1
    11126U,	// RCR32rCL
    2122621U,	// RCR32ri
    124608U,	// RCR64m1
    125915U,	// RCR64mCL
    4212416U,	// RCR64mi
    9920U,	// RCR64r1
    11227U,	// RCR64rCL
    2123456U,	// RCR64ri
    188555U,	// RCR8m1
    191249U,	// RCR8mCL
    5259403U,	// RCR8mi
    8331U,	// RCR8r1
    11025U,	// RCR8rCL
    2121867U,	// RCR8ri
    8790U,	// RDFSBASE
    9656U,	// RDFSBASE64
    8812U,	// RDGSBASE
    9678U,	// RDGSBASE64
    5472U,	// RDMSR
    5063U,	// RDPMC
    10430U,	// RDRAND16r
    8729U,	// RDRAND32r
    9595U,	// RDRAND64r
    10414U,	// RDSEED16r
    8713U,	// RDSEED32r
    9579U,	// RDSEED64r
    5076U,	// RDTSC
    5381U,	// RDTSCP
    4588U,	// RELEASE_MOV16mr
    4588U,	// RELEASE_MOV32mr
    4588U,	// RELEASE_MOV64mr
    4588U,	// RELEASE_MOV8mr
    5126U,	// REPNE_PREFIX
    5007U,	// REP_MOVSB_32
    5007U,	// REP_MOVSB_64
    5281U,	// REP_MOVSD_32
    5281U,	// REP_MOVSD_64
    5419U,	// REP_MOVSQ_64
    5861U,	// REP_MOVSW_32
    5861U,	// REP_MOVSW_64
    5388U,	// REP_PREFIX
    4997U,	// REP_STOSB_32
    4997U,	// REP_STOSB_64
    5271U,	// REP_STOSD_32
    5271U,	// REP_STOSD_64
    5409U,	// REP_STOSQ_64
    5851U,	// REP_STOSW_32
    5851U,	// REP_STOSW_64
    9273U,	// RETIL
    10098U,	// RETIQ
    10851U,	// RETIW
    5292U,	// RETL
    5430U,	// RETQ
    5877U,	// RETW
    4842U,	// REX64_PREFIX
    108860U,	// ROL16m1
    109610U,	// ROL16mCL
    1067324U,	// ROL16mi
    10556U,	// ROL16r1
    11306U,	// ROL16rCL
    2124092U,	// ROL16ri
    115450U,	// ROL32m1
    117600U,	// ROL32mCL
    3162874U,	// ROL32mi
    8954U,	// ROL32r1
    11104U,	// ROL32rCL
    2122490U,	// ROL32ri
    124493U,	// ROL64m1
    125893U,	// ROL64mCL
    4212301U,	// ROL64mi
    9805U,	// ROL64r1
    11205U,	// ROL64rCL
    2123341U,	// ROL64ri
    188525U,	// ROL8m1
    191227U,	// ROL8mCL
    5259373U,	// ROL8mi
    8301U,	// ROL8r1
    11003U,	// ROL8rCL
    2121837U,	// ROL8ri
    108981U,	// ROR16m1
    109654U,	// ROR16mCL
    1067445U,	// ROR16mi
    10677U,	// ROR16r1
    11350U,	// ROR16rCL
    2124213U,	// ROR16ri
    115593U,	// ROR32m1
    117644U,	// ROR32mCL
    3163017U,	// ROR32mi
    9097U,	// ROR32r1
    11148U,	// ROR32rCL
    2122633U,	// ROR32ri
    124620U,	// ROR64m1
    125937U,	// ROR64mCL
    4212428U,	// ROR64mi
    9932U,	// ROR64r1
    11249U,	// ROR64rCL
    2123468U,	// ROR64ri
    188567U,	// ROR8m1
    191271U,	// ROR8mCL
    5259415U,	// ROR8mi
    8343U,	// ROR8r1
    11047U,	// ROR8rCL
    2121879U,	// ROR8ri
    5858487U,	// RORX32mi
    18375863U,	// RORX32ri
    6383605U,	// RORX64mi
    18376693U,	// RORX64ri
    5340U,	// RSM
    5157U,	// SAHF
    5050U,	// SALC
    108957U,	// SAR16m1
    109621U,	// SAR16mCL
    1067421U,	// SAR16mi
    10653U,	// SAR16r1
    11317U,	// SAR16rCL
    2124189U,	// SAR16ri
    115575U,	// SAR32m1
    117611U,	// SAR32mCL
    3162999U,	// SAR32mi
    9079U,	// SAR32r1
    11115U,	// SAR32rCL
    2122615U,	// SAR32ri
    124602U,	// SAR64m1
    125904U,	// SAR64mCL
    4212410U,	// SAR64mi
    9914U,	// SAR64r1
    11216U,	// SAR64rCL
    2123450U,	// SAR64ri
    188549U,	// SAR8m1
    191238U,	// SAR8mCL
    5259397U,	// SAR8mi
    8325U,	// SAR8r1
    11014U,	// SAR8rCL
    2121861U,	// SAR8ri
    5858473U,	// SARX32rm
    18375849U,	// SARX32rr
    6383591U,	// SARX64rm
    18376679U,	// SARX64rr
    534635U,	// SBB16i16
    1067115U,	// SBB16mi
    1067115U,	// SBB16mi8
    1067115U,	// SBB16mr
    1599595U,	// SBB16ri
    1599595U,	// SBB16ri8
    1607787U,	// SBB16rm
    1599595U,	// SBB16rr
    2123883U,	// SBB16rr_REV
    2630077U,	// SBB32i32
    3162557U,	// SBB32mi
    3162557U,	// SBB32mi8
    3162557U,	// SBB32mr
    1597885U,	// SBB32ri
    1597885U,	// SBB32ri8
    1614269U,	// SBB32rm
    1597885U,	// SBB32rr
    2122173U,	// SBB32rr_REV
    3679519U,	// SBB64i32
    4211999U,	// SBB64mi32
    4211999U,	// SBB64mi8
    4211999U,	// SBB64mr
    1598751U,	// SBB64ri32
    1598751U,	// SBB64ri8
    1623327U,	// SBB64rm
    1598751U,	// SBB64rr
    2123039U,	// SBB64rr_REV
    4726818U,	// SBB8i8
    5259298U,	// SBB8mi
    5259298U,	// SBB8mr
    1597474U,	// SBB8ri
    57378U,	// SBB8rm
    1597474U,	// SBB8rr
    2121762U,	// SBB8rr_REV
    674265U,	// SCAS16
    2778038U,	// SCAS32
    3835650U,	// SCAS64
    4890787U,	// SCAS8
    5719U,	// SEG_ALLOCA_32
    5719U,	// SEG_ALLOCA_64
    188721U,	// SETAEm
    8497U,	// SETAEr
    188421U,	// SETAm
    8197U,	// SETAr
    188733U,	// SETBEm
    8509U,	// SETBEr
    0U,	// SETB_C16r
    0U,	// SETB_C32r
    0U,	// SETB_C64r
    0U,	// SETB_C8r
    188623U,	// SETBm
    8399U,	// SETBr
    188795U,	// SETEm
    8571U,	// SETEr
    188745U,	// SETGEm
    8521U,	// SETGEr
    188820U,	// SETGm
    8596U,	// SETGr
    188761U,	// SETLEm
    8537U,	// SETLEr
    189503U,	// SETLm
    9279U,	// SETLr
    188781U,	// SETNEm
    8557U,	// SETNEr
    189651U,	// SETNOm
    9427U,	// SETNOr
    189678U,	// SETNPm
    9454U,	// SETNPr
    190512U,	// SETNSm
    10288U,	// SETNSr
    189658U,	// SETOm
    9434U,	// SETOr
    189691U,	// SETPm
    9467U,	// SETPr
    190519U,	// SETSm
    10295U,	// SETSr
    199231U,	// SGDT16m
    197660U,	// SGDT32m
    198485U,	// SGDT64m
    108846U,	// SHL16m1
    109599U,	// SHL16mCL
    1067310U,	// SHL16mi
    10542U,	// SHL16r1
    11295U,	// SHL16rCL
    2124078U,	// SHL16ri
    115418U,	// SHL32m1
    117589U,	// SHL32mCL
    3162842U,	// SHL32mi
    8922U,	// SHL32r1
    11093U,	// SHL32rCL
    2122458U,	// SHL32ri
    124480U,	// SHL64m1
    125882U,	// SHL64mCL
    4212288U,	// SHL64mi
    9792U,	// SHL64r1
    11194U,	// SHL64rCL
    2123328U,	// SHL64ri
    188519U,	// SHL8m1
    191216U,	// SHL8mCL
    5259367U,	// SHL8mi
    8295U,	// SHL8r1
    10992U,	// SHL8rCL
    2121831U,	// SHL8ri
    1068028U,	// SHLD16mrCL
    145320119U,	// SHLD16mri8
    2124796U,	// SHLD16rrCL
    321719U,	// SHLD16rri8
    3164978U,	// SHLD32mrCL
    162095634U,	// SHLD32mri8
    2124594U,	// SHLD32rrCL
    320018U,	// SHLD32rri8
    4213655U,	// SHLD64mrCL
    178873716U,	// SHLD64mri8
    2124695U,	// SHLD64rrCL
    320884U,	// SHLD64rri8
    5858452U,	// SHLX32rm
    18375828U,	// SHLX32rr
    6383570U,	// SHLX64rm
    18376658U,	// SHLX64rr
    108975U,	// SHR16m1
    109643U,	// SHR16mCL
    1067439U,	// SHR16mi
    10671U,	// SHR16r1
    11339U,	// SHR16rCL
    2124207U,	// SHR16ri
    115587U,	// SHR32m1
    117633U,	// SHR32mCL
    3163011U,	// SHR32mi
    9091U,	// SHR32r1
    11137U,	// SHR32rCL
    2122627U,	// SHR32ri
    124614U,	// SHR64m1
    125926U,	// SHR64mCL
    4212422U,	// SHR64mi
    9926U,	// SHR64r1
    11238U,	// SHR64rCL
    2123462U,	// SHR64ri
    188561U,	// SHR8m1
    191260U,	// SHR8mCL
    5259409U,	// SHR8mi
    8337U,	// SHR8r1
    11036U,	// SHR8rCL
    2121873U,	// SHR8ri
    1068040U,	// SHRD16mrCL
    145320135U,	// SHRD16mri8
    2124808U,	// SHRD16rrCL
    321735U,	// SHRD16rri8
    3164990U,	// SHRD32mrCL
    162095650U,	// SHRD32mri8
    2124606U,	// SHRD32rrCL
    320034U,	// SHRD32rri8
    4213667U,	// SHRD64mrCL
    178873732U,	// SHRD64mri8
    2124707U,	// SHRD64rrCL
    320900U,	// SHRD64rri8
    5858480U,	// SHRX32rm
    18375856U,	// SHRX32rr
    6383598U,	// SHRX64rm
    18376686U,	// SHRX64rr
    199245U,	// SIDT16m
    197674U,	// SIDT32m
    198499U,	// SIDT64m
    5936U,	// SKINIT
    109147U,	// SLDT16m
    10843U,	// SLDT16r
    9265U,	// SLDT32r
    108394U,	// SLDT64m
    10090U,	// SLDT64r
    109210U,	// SMSW16m
    10906U,	// SMSW16r
    9334U,	// SMSW32r
    10164U,	// SMSW64r
    5771U,	// SS_PREFIX
    5028U,	// STAC
    5082U,	// STC
    5101U,	// STD
    5176U,	// STGI
    5185U,	// STI
    174787U,	// STOSB
    158880U,	// STOSL
    167124U,	// STOSQ
    150639U,	// STOSW
    10707U,	// STR16r
    9128U,	// STR32r
    9972U,	// STR64r
    109011U,	// STRm
    534649U,	// SUB16i16
    1067129U,	// SUB16mi
    1067129U,	// SUB16mi8
    1067129U,	// SUB16mr
    1599609U,	// SUB16ri
    1599609U,	// SUB16ri8
    1607801U,	// SUB16rm
    1599609U,	// SUB16rr
    2123897U,	// SUB16rr_REV
    2630091U,	// SUB32i32
    3162571U,	// SUB32mi
    3162571U,	// SUB32mi8
    3162571U,	// SUB32mr
    1597899U,	// SUB32ri
    1597899U,	// SUB32ri8
    1614283U,	// SUB32rm
    1597899U,	// SUB32rr
    2122187U,	// SUB32rr_REV
    3679533U,	// SUB64i32
    4212013U,	// SUB64mi32
    4212013U,	// SUB64mi8
    4212013U,	// SUB64mr
    1598765U,	// SUB64ri32
    1598765U,	// SUB64ri8
    1623341U,	// SUB64rm
    1598765U,	// SUB64rr
    2123053U,	// SUB64rr_REV
    4726824U,	// SUB8i8
    5259304U,	// SUB8mi
    5259304U,	// SUB8mr
    1597480U,	// SUB8ri
    57384U,	// SUB8rm
    1597480U,	// SUB8rr
    2121768U,	// SUB8rr_REV
    5712U,	// SWAPGS
    5263U,	// SYSCALL
    5463U,	// SYSENTER
    5311U,	// SYSEXIT
    5449U,	// SYSEXIT64
    5303U,	// SYSRET
    5441U,	// SYSRET64
    65789U,	// T1MSKC32rm
    2171133U,	// T1MSKC32rr
    82173U,	// T1MSKC64rm
    2171133U,	// T1MSKC64rr
    11666660U,	// TAILJMPd
    11666660U,	// TAILJMPd64
    11653643U,	// TAILJMPm
    11661852U,	// TAILJMPm64
    0U,	// TAILJMPr
    11547164U,	// TAILJMPr64
    0U,	// TCRETURNdi
    0U,	// TCRETURNdi64
    0U,	// TCRETURNmi
    0U,	// TCRETURNmi64
    0U,	// TCRETURNri
    0U,	// TCRETURNri64
    535167U,	// TEST16i16
    1067647U,	// TEST16mi
    2173567U,	// TEST16ri
    100991U,	// TEST16rm
    2173567U,	// TEST16rr
    2630747U,	// TEST32i32
    3163227U,	// TEST32mi
    2171995U,	// TEST32ri
    66651U,	// TEST32rm
    2171995U,	// TEST32rr
    3680153U,	// TEST64i32
    4212633U,	// TEST64mi32
    2172825U,	// TEST64ri32
    83865U,	// TEST64rm
    2172825U,	// TEST64rr
    4727003U,	// TEST8i8
    5259483U,	// TEST8mi
    2171099U,	// TEST8ri
    0U,	// TEST8ri_NOREX
    139483U,	// TEST8rm
    2171099U,	// TEST8rr
    4708U,	// TLSCall_32
    4798U,	// TLSCall_64
    4721U,	// TLS_addr32
    4811U,	// TLS_addr64
    4734U,	// TLS_base_addr32
    4824U,	// TLS_base_addr64
    4752U,	// TRAP
    100977U,	// TZCNT16rm
    2173553U,	// TZCNT16rr
    66637U,	// TZCNT32rm
    2171981U,	// TZCNT32rr
    83840U,	// TZCNT64rm
    2172800U,	// TZCNT64rr
    65960U,	// TZMSK32rm
    2171304U,	// TZMSK32rr
    82344U,	// TZMSK64rm
    2171304U,	// TZMSK64rr
    4962U,	// UD2B
    191376642U,	// VAARG_64
    375926052U,	// VASTART_SAVE_XMM_REGS
    108564U,	// VERRm
    10260U,	// VERRr
    108969U,	// VERWm
    10665U,	// VERWr
    5256U,	// VMCALL
    124924U,	// VMCLEARm
    5069U,	// VMFUNC
    5162U,	// VMLAUNCH
    5901U,	// VMLOAD32
    5981U,	// VMLOAD64
    5248U,	// VMMCALL
    123164U,	// VMPTRLDm
    125012U,	// VMPTRSTm
    3162617U,	// VMREAD32rm
    2171385U,	// VMREAD32rr
    4212059U,	// VMREAD64rm
    2172251U,	// VMREAD64rr
    5117U,	// VMRESUME
    5925U,	// VMRUN32
    6005U,	// VMRUN64
    5913U,	// VMSAVE32
    5993U,	// VMSAVE64
    66178U,	// VMWRITE32rm
    2171522U,	// VMWRITE32rr
    83428U,	// VMWRITE64rm
    2172388U,	// VMWRITE64rr
    5145U,	// VMXOFF
    124099U,	// VMXON
    132678U,	// W64ALLOCA
    5110U,	// WBINVD
    5344U,	// WIN_ALLOCA
    5189U,	// WIN_FTOL_32
    5189U,	// WIN_FTOL_64
    8801U,	// WRFSBASE
    9667U,	// WRFSBASE64
    8823U,	// WRGSBASE
    9689U,	// WRGSBASE64
    5478U,	// WRMSR
    1067175U,	// XADD16rm
    2173095U,	// XADD16rr
    3162626U,	// XADD32rm
    2171394U,	// XADD32rr
    4212068U,	// XADD64rm
    2172260U,	// XADD64rr
    5259328U,	// XADD8rm
    2170944U,	// XADD8rr
    534802U,	// XCHG16ar
    7940370U,	// XCHG16rm
    12134674U,	// XCHG16rr
    2630307U,	// XCHG32ar
    2630307U,	// XCHG32ar64
    8463011U,	// XCHG32rm
    12133027U,	// XCHG32rr
    3679757U,	// XCHG64ar
    8988173U,	// XCHG64rm
    12133901U,	// XCHG64rr
    9510998U,	// XCHG8rm
    12132438U,	// XCHG8rr
    5033U,	// XCRYPTCBC
    4977U,	// XCRYPTCFB
    5484U,	// XCRYPTCTR
    4967U,	// XCRYPTECB
    4987U,	// XCRYPTOFB
    5811U,	// XGETBV
    5017U,	// XLAT
    534971U,	// XOR16i16
    1067451U,	// XOR16mi
    1067451U,	// XOR16mi8
    1067451U,	// XOR16mr
    1599931U,	// XOR16ri
    1599931U,	// XOR16ri8
    1608123U,	// XOR16rm
    1599931U,	// XOR16rr
    2124219U,	// XOR16rr_REV
    2630543U,	// XOR32i32
    3163023U,	// XOR32mi
    3163023U,	// XOR32mi8
    3163023U,	// XOR32mr
    1598351U,	// XOR32ri
    1598351U,	// XOR32ri8
    1614735U,	// XOR32rm
    1598351U,	// XOR32rr
    2122639U,	// XOR32rr_REV
    3679963U,	// XOR64i32
    4212443U,	// XOR64mi32
    4212443U,	// XOR64mi8
    4212443U,	// XOR64mr
    1599195U,	// XOR64ri32
    1599195U,	// XOR64ri8
    1623771U,	// XOR64rm
    1599195U,	// XOR64rr
    2123483U,	// XOR64rr_REV
    4726941U,	// XOR8i8
    5259421U,	// XOR8mi
    5259421U,	// XOR8mr
    1597597U,	// XOR8ri
    57501U,	// XOR8rm
    1597597U,	// XOR8rr
    2121885U,	// XOR8rr_REV
    198668U,	// XRSTOR
    198354U,	// XRSTOR64
    196993U,	// XSAVE
    198126U,	// XSAVE64
    198730U,	// XSAVEOPT
    198542U,	// XSAVEOPT64
    5818U,	// XSETBV
    4660U,	// XSHA1
    4855U,	// XSHA256
    5132U,	// XSTORE
    0U
  };

#ifndef CAPSTONE_DIET
  static char AsmStrs[] = {
  /* 0 */ 'j', 'a', 9, 0,
  /* 4 */ 's', 'e', 't', 'a', 9, 0,
  /* 10 */ 'c', 'm', 'p', 'x', 'c', 'h', 'g', '1', '6', 'b', 9, 0,
  /* 22 */ 'c', 'm', 'p', 'x', 'c', 'h', 'g', '8', 'b', 9, 0,
  /* 33 */ 's', 'b', 'b', 'b', 9, 0,
  /* 39 */ 's', 'u', 'b', 'b', 9, 0,
  /* 45 */ 'a', 'd', 'c', 'b', 9, 0,
  /* 51 */ 'd', 'e', 'c', 'b', 9, 0,
  /* 57 */ 'i', 'n', 'c', 'b', 9, 0,
  /* 63 */ 'x', 'a', 'd', 'd', 'b', 9, 0,
  /* 70 */ 'a', 'n', 'd', 'b', 9, 0,
  /* 76 */ 'n', 'e', 'g', 'b', 9, 0,
  /* 82 */ 'c', 'm', 'p', 'x', 'c', 'h', 'g', 'b', 9, 0,
  /* 92 */ 'j', 'b', 9, 0,
  /* 96 */ 'r', 'c', 'l', 'b', 9, 0,
  /* 102 */ 's', 'h', 'l', 'b', 9, 0,
  /* 108 */ 'r', 'o', 'l', 'b', 9, 0,
  /* 114 */ 'i', 'm', 'u', 'l', 'b', 9, 0,
  /* 121 */ 'i', 'n', 'b', 9, 0,
  /* 126 */ 'c', 'm', 'p', 'b', 9, 0,
  /* 132 */ 's', 'a', 'r', 'b', 9, 0,
  /* 138 */ 'r', 'c', 'r', 'b', 9, 0,
  /* 144 */ 's', 'h', 'r', 'b', 9, 0,
  /* 150 */ 'r', 'o', 'r', 'b', 9, 0,
  /* 156 */ 'x', 'o', 'r', 'b', 9, 0,
  /* 162 */ 's', 'c', 'a', 's', 'b', 9, 0,
  /* 169 */ 'm', 'o', 'v', 'a', 'b', 's', 'b', 9, 0,
  /* 178 */ 'l', 'o', 'd', 's', 'b', 9, 0,
  /* 185 */ 'c', 'm', 'p', 's', 'b', 9, 0,
  /* 192 */ 'o', 'u', 't', 's', 'b', 9, 0,
  /* 199 */ 'm', 'o', 'v', 's', 'b', 9, 0,
  /* 206 */ 's', 'e', 't', 'b', 9, 0,
  /* 212 */ 'n', 'o', 't', 'b', 9, 0,
  /* 218 */ 't', 'e', 's', 't', 'b', 9, 0,
  /* 225 */ 'i', 'd', 'i', 'v', 'b', 9, 0,
  /* 232 */ 'm', 'o', 'v', 'b', 9, 0,
  /* 238 */ 'b', 'l', 'c', 'i', 'c', 9, 0,
  /* 245 */ 'b', 'l', 's', 'i', 'c', 9, 0,
  /* 252 */ 't', '1', 'm', 's', 'k', 'c', 9, 0,
  /* 260 */ 'a', 'a', 'd', 9, 0,
  /* 265 */ 'i', 'n', 'v', 'p', 'c', 'i', 'd', 9, 0,
  /* 274 */ 'i', 'n', 'v', 'v', 'p', 'i', 'd', 9, 0,
  /* 283 */ 'v', 'm', 'p', 't', 'r', 'l', 'd', 9, 0,
  /* 292 */ 'b', 'o', 'u', 'n', 'd', 9, 0,
  /* 299 */ 'j', 'a', 'e', 9, 0,
  /* 304 */ 's', 'e', 't', 'a', 'e', 9, 0,
  /* 311 */ 'j', 'b', 'e', 9, 0,
  /* 316 */ 's', 'e', 't', 'b', 'e', 9, 0,
  /* 323 */ 'j', 'g', 'e', 9, 0,
  /* 328 */ 's', 'e', 't', 'g', 'e', 9, 0,
  /* 335 */ 'j', 'e', 9, 0,
  /* 339 */ 'j', 'l', 'e', 9, 0,
  /* 344 */ 's', 'e', 't', 'l', 'e', 9, 0,
  /* 351 */ 'j', 'n', 'e', 9, 0,
  /* 356 */ 'l', 'o', 'o', 'p', 'n', 'e', 9, 0,
  /* 364 */ 's', 'e', 't', 'n', 'e', 9, 0,
  /* 371 */ 'l', 'o', 'o', 'p', 'e', 9, 0,
  /* 378 */ 's', 'e', 't', 'e', 9, 0,
  /* 384 */ 'x', 's', 'a', 'v', 'e', 9, 0,
  /* 391 */ 'j', 'g', 9, 0,
  /* 395 */ 'i', 'n', 'v', 'l', 'p', 'g', 9, 0,
  /* 403 */ 's', 'e', 't', 'g', 9, 0,
  /* 409 */ 'b', 'l', 'c', 'i', 9, 0,
  /* 415 */ 'b', 'l', 'c', 'm', 's', 'k', 9, 0,
  /* 423 */ 't', 'z', 'm', 's', 'k', 9, 0,
  /* 430 */ 'l', 'e', 'a', 'l', 9, 0,
  /* 436 */ 'c', 'm', 'o', 'v', 'a', 'l', 9, 0,
  /* 444 */ 's', 'b', 'b', 'l', 9, 0,
  /* 450 */ 'm', 'o', 'v', 's', 'b', 'l', 9, 0,
  /* 458 */ 's', 'u', 'b', 'l', 9, 0,
  /* 464 */ 'c', 'm', 'o', 'v', 'b', 'l', 9, 0,
  /* 472 */ 'm', 'o', 'v', 'z', 'b', 'l', 9, 0,
  /* 480 */ 'a', 'd', 'c', 'l', 9, 0,
  /* 486 */ 'd', 'e', 'c', 'l', 9, 0,
  /* 492 */ 'i', 'n', 'c', 'l', 9, 0,
  /* 498 */ 'b', 't', 'c', 'l', 9, 0,
  /* 504 */ 'v', 'm', 'r', 'e', 'a', 'd', 'l', 9, 0,
  /* 513 */ 'x', 'a', 'd', 'd', 'l', 9, 0,
  /* 520 */ 'r', 'd', 's', 'e', 'e', 'd', 'l', 9, 0,
  /* 529 */ 's', 'h', 'l', 'd', 'l', 9, 0,
  /* 536 */ 'r', 'd', 'r', 'a', 'n', 'd', 'l', 9, 0,
  /* 545 */ 's', 'h', 'r', 'd', 'l', 9, 0,
  /* 552 */ 'c', 'm', 'o', 'v', 'a', 'e', 'l', 9, 0,
  /* 561 */ 'c', 'm', 'o', 'v', 'b', 'e', 'l', 9, 0,
  /* 570 */ 'c', 'm', 'o', 'v', 'g', 'e', 'l', 9, 0,
  /* 579 */ 'c', 'm', 'o', 'v', 'l', 'e', 'l', 9, 0,
  /* 588 */ 'c', 'm', 'o', 'v', 'n', 'e', 'l', 9, 0,
  /* 597 */ 'r', 'd', 'f', 's', 'b', 'a', 's', 'e', 'l', 9, 0,
  /* 608 */ 'w', 'r', 'f', 's', 'b', 'a', 's', 'e', 'l', 9, 0,
  /* 619 */ 'r', 'd', 'g', 's', 'b', 'a', 's', 'e', 'l', 9, 0,
  /* 630 */ 'w', 'r', 'g', 's', 'b', 'a', 's', 'e', 'l', 9, 0,
  /* 641 */ 'v', 'm', 'w', 'r', 'i', 't', 'e', 'l', 9, 0,
  /* 651 */ 'c', 'm', 'o', 'v', 'e', 'l', 9, 0,
  /* 659 */ 'b', 's', 'f', 'l', 9, 0,
  /* 665 */ 'n', 'e', 'g', 'l', 9, 0,
  /* 671 */ 'c', 'm', 'p', 'x', 'c', 'h', 'g', 'l', 9, 0,
  /* 681 */ 'c', 'm', 'o', 'v', 'g', 'l', 9, 0,
  /* 689 */ 'p', 'u', 's', 'h', 'l', 9, 0,
  /* 696 */ 'b', 'z', 'h', 'i', 'l', 9, 0,
  /* 703 */ 'b', 'l', 's', 'i', 'l', 9, 0,
  /* 710 */ 'j', 'l', 9, 0,
  /* 714 */ 'b', 'l', 's', 'm', 's', 'k', 'l', 9, 0,
  /* 723 */ 'r', 'c', 'l', 'l', 9, 0,
  /* 729 */ 's', 'h', 'l', 'l', 9, 0,
  /* 735 */ 'b', 'l', 'c', 'f', 'i', 'l', 'l', 9, 0,
  /* 744 */ 'b', 'l', 's', 'f', 'i', 'l', 'l', 9, 0,
  /* 753 */ 'l', 'c', 'a', 'l', 'l', 'l', 9, 0,
  /* 761 */ 'r', 'o', 'l', 'l', 9, 0,
  /* 767 */ 'l', 's', 'l', 'l', 9, 0,
  /* 773 */ 'i', 'm', 'u', 'l', 'l', 9, 0,
  /* 780 */ 'c', 'm', 'o', 'v', 'l', 'l', 9, 0,
  /* 788 */ 'a', 'n', 'd', 'n', 'l', 9, 0,
  /* 795 */ 'i', 'n', 'l', 9, 0,
  /* 800 */ 'c', 'm', 'o', 'v', 'n', 'o', 'l', 9, 0,
  /* 809 */ 'c', 'm', 'o', 'v', 'o', 'l', 9, 0,
  /* 817 */ 'b', 's', 'w', 'a', 'p', 'l', 9, 0,
  /* 825 */ 'p', 'd', 'e', 'p', 'l', 9, 0,
  /* 832 */ 'c', 'm', 'p', 'l', 9, 0,
  /* 838 */ 'l', 'j', 'm', 'p', 'l', 9, 0,
  /* 845 */ 'c', 'm', 'o', 'v', 'n', 'p', 'l', 9, 0,
  /* 854 */ 'n', 'o', 'p', 'l', 9, 0,
  /* 860 */ 'p', 'o', 'p', 'l', 9, 0,
  /* 866 */ 'a', 'r', 'p', 'l', 9, 0,
  /* 872 */ 'c', 'm', 'o', 'v', 'p', 'l', 9, 0,
  /* 880 */ 'l', 'a', 'r', 'l', 9, 0,
  /* 886 */ 's', 'a', 'r', 'l', 9, 0,
  /* 892 */ 'r', 'c', 'r', 'l', 9, 0,
  /* 898 */ 's', 'h', 'r', 'l', 9, 0,
  /* 904 */ 'r', 'o', 'r', 'l', 9, 0,
  /* 910 */ 'x', 'o', 'r', 'l', 9, 0,
  /* 916 */ 'b', 's', 'r', 'l', 9, 0,
  /* 922 */ 'b', 'l', 's', 'r', 'l', 9, 0,
  /* 929 */ 'b', 't', 'r', 'l', 9, 0,
  /* 935 */ 's', 't', 'r', 'l', 9, 0,
  /* 941 */ 'b', 'e', 'x', 't', 'r', 'l', 9, 0,
  /* 949 */ 's', 'c', 'a', 's', 'l', 9, 0,
  /* 956 */ 'm', 'o', 'v', 'a', 'b', 's', 'l', 9, 0,
  /* 965 */ 'l', 'd', 's', 'l', 9, 0,
  /* 971 */ 'l', 'o', 'd', 's', 'l', 9, 0,
  /* 978 */ 'l', 'e', 's', 'l', 9, 0,
  /* 984 */ 'l', 'f', 's', 'l', 9, 0,
  /* 990 */ 'l', 'g', 's', 'l', 9, 0,
  /* 996 */ 'c', 'm', 'o', 'v', 'n', 's', 'l', 9, 0,
  /* 1005 */ 'c', 'm', 'p', 's', 'l', 9, 0,
  /* 1012 */ 'l', 's', 's', 'l', 9, 0,
  /* 1018 */ 'b', 't', 's', 'l', 9, 0,
  /* 1024 */ 'o', 'u', 't', 's', 'l', 9, 0,
  /* 1031 */ 'c', 'm', 'o', 'v', 's', 'l', 9, 0,
  /* 1039 */ 'b', 't', 'l', 9, 0,
  /* 1044 */ 'l', 'g', 'd', 't', 'l', 9, 0,
  /* 1051 */ 's', 'g', 'd', 't', 'l', 9, 0,
  /* 1058 */ 'l', 'i', 'd', 't', 'l', 9, 0,
  /* 1065 */ 's', 'i', 'd', 't', 'l', 9, 0,
  /* 1072 */ 's', 'l', 'd', 't', 'l', 9, 0,
  /* 1079 */ 'l', 'r', 'e', 't', 'l', 9, 0,
  /* 1086 */ 's', 'e', 't', 'l', 9, 0,
  /* 1092 */ 'l', 'z', 'c', 'n', 't', 'l', 9, 0,
  /* 1100 */ 't', 'z', 'c', 'n', 't', 'l', 9, 0,
  /* 1108 */ 'n', 'o', 't', 'l', 9, 0,
  /* 1114 */ 't', 'e', 's', 't', 'l', 9, 0,
  /* 1121 */ 'p', 'e', 'x', 't', 'l', 9, 0,
  /* 1128 */ 'i', 'd', 'i', 'v', 'l', 9, 0,
  /* 1135 */ 'm', 'o', 'v', 'l', 9, 0,
  /* 1141 */ 's', 'm', 's', 'w', 'l', 9, 0,
  /* 1148 */ 'm', 'o', 'v', 's', 'w', 'l', 9, 0,
  /* 1156 */ 'm', 'o', 'v', 'z', 'w', 'l', 9, 0,
  /* 1164 */ 'a', 'd', 'c', 'x', 'l', 9, 0,
  /* 1171 */ 's', 'h', 'l', 'x', 'l', 9, 0,
  /* 1178 */ 'm', 'u', 'l', 'x', 'l', 9, 0,
  /* 1185 */ 'a', 'd', 'o', 'x', 'l', 9, 0,
  /* 1192 */ 's', 'a', 'r', 'x', 'l', 9, 0,
  /* 1199 */ 's', 'h', 'r', 'x', 'l', 9, 0,
  /* 1206 */ 'r', 'o', 'r', 'x', 'l', 9, 0,
  /* 1213 */ 'a', 'a', 'm', 9, 0,
  /* 1218 */ 'v', 'm', 'x', 'o', 'n', 9, 0,
  /* 1225 */ 'j', 'o', 9, 0,
  /* 1229 */ 'j', 'n', 'o', 9, 0,
  /* 1234 */ 's', 'e', 't', 'n', 'o', 9, 0,
  /* 1241 */ 's', 'e', 't', 'o', 9, 0,
  /* 1247 */ 'j', 'p', 9, 0,
  /* 1251 */ 'j', 'm', 'p', 9, 0,
  /* 1256 */ 'j', 'n', 'p', 9, 0,
  /* 1261 */ 's', 'e', 't', 'n', 'p', 9, 0,
  /* 1268 */ 'l', 'o', 'o', 'p', 9, 0,
  /* 1274 */ 's', 'e', 't', 'p', 9, 0,
  /* 1280 */ '#', 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'u', 'p', 9, 0,
  /* 1296 */ 'l', 'e', 'a', 'q', 9, 0,
  /* 1302 */ 'c', 'm', 'o', 'v', 'a', 'q', 9, 0,
  /* 1310 */ 's', 'b', 'b', 'q', 9, 0,
  /* 1316 */ 'm', 'o', 'v', 's', 'b', 'q', 9, 0,
  /* 1324 */ 's', 'u', 'b', 'q', 9, 0,
  /* 1330 */ 'c', 'm', 'o', 'v', 'b', 'q', 9, 0,
  /* 1338 */ 'm', 'o', 'v', 'z', 'b', 'q', 9, 0,
  /* 1346 */ 'a', 'd', 'c', 'q', 9, 0,
  /* 1352 */ 'd', 'e', 'c', 'q', 9, 0,
  /* 1358 */ 'i', 'n', 'c', 'q', 9, 0,
  /* 1364 */ 'b', 't', 'c', 'q', 9, 0,
  /* 1370 */ 'v', 'm', 'r', 'e', 'a', 'd', 'q', 9, 0,
  /* 1379 */ 'x', 'a', 'd', 'd', 'q', 9, 0,
  /* 1386 */ 'r', 'd', 's', 'e', 'e', 'd', 'q', 9, 0,
  /* 1395 */ 's', 'h', 'l', 'd', 'q', 9, 0,
  /* 1402 */ 'r', 'd', 'r', 'a', 'n', 'd', 'q', 9, 0,
  /* 1411 */ 's', 'h', 'r', 'd', 'q', 9, 0,
  /* 1418 */ 'c', 'm', 'o', 'v', 'a', 'e', 'q', 9, 0,
  /* 1427 */ 'c', 'm', 'o', 'v', 'b', 'e', 'q', 9, 0,
  /* 1436 */ 'c', 'm', 'o', 'v', 'g', 'e', 'q', 9, 0,
  /* 1445 */ 'c', 'm', 'o', 'v', 'l', 'e', 'q', 9, 0,
  /* 1454 */ 'c', 'm', 'o', 'v', 'n', 'e', 'q', 9, 0,
  /* 1463 */ 'r', 'd', 'f', 's', 'b', 'a', 's', 'e', 'q', 9, 0,
  /* 1474 */ 'w', 'r', 'f', 's', 'b', 'a', 's', 'e', 'q', 9, 0,
  /* 1485 */ 'r', 'd', 'g', 's', 'b', 'a', 's', 'e', 'q', 9, 0,
  /* 1496 */ 'w', 'r', 'g', 's', 'b', 'a', 's', 'e', 'q', 9, 0,
  /* 1507 */ 'v', 'm', 'w', 'r', 'i', 't', 'e', 'q', 9, 0,
  /* 1517 */ 'x', 's', 'a', 'v', 'e', 'q', 9, 0,
  /* 1525 */ 'c', 'm', 'o', 'v', 'e', 'q', 9, 0,
  /* 1533 */ 'b', 's', 'f', 'q', 9, 0,
  /* 1539 */ 'n', 'e', 'g', 'q', 9, 0,
  /* 1545 */ 'c', 'm', 'p', 'x', 'c', 'h', 'g', 'q', 9, 0,
  /* 1555 */ 'c', 'm', 'o', 'v', 'g', 'q', 9, 0,
  /* 1563 */ 'p', 'u', 's', 'h', 'q', 9, 0,
  /* 1570 */ 'b', 'z', 'h', 'i', 'q', 9, 0,
  /* 1577 */ 'b', 'l', 's', 'i', 'q', 9, 0,
  /* 1584 */ 'b', 'l', 's', 'm', 's', 'k', 'q', 9, 0,
  /* 1593 */ 'r', 'c', 'l', 'q', 9, 0,
  /* 1599 */ 's', 'h', 'l', 'q', 9, 0,
  /* 1605 */ 'c', 'a', 'l', 'l', 'q', 9, 0,
  /* 1612 */ 'r', 'o', 'l', 'q', 9, 0,
  /* 1618 */ 'l', 's', 'l', 'q', 9, 0,
  /* 1624 */ 'm', 'o', 'v', 's', 'l', 'q', 9, 0,
  /* 1632 */ 'i', 'm', 'u', 'l', 'q', 9, 0,
  /* 1639 */ 'c', 'm', 'o', 'v', 'l', 'q', 9, 0,
  /* 1647 */ 'a', 'n', 'd', 'n', 'q', 9, 0,
  /* 1654 */ 'c', 'm', 'o', 'v', 'n', 'o', 'q', 9, 0,
  /* 1663 */ 'c', 'm', 'o', 'v', 'o', 'q', 9, 0,
  /* 1671 */ 'b', 's', 'w', 'a', 'p', 'q', 9, 0,
  /* 1679 */ 'p', 'd', 'e', 'p', 'q', 9, 0,
  /* 1686 */ 'c', 'm', 'p', 'q', 9, 0,
  /* 1692 */ 'c', 'm', 'o', 'v', 'n', 'p', 'q', 9, 0,
  /* 1701 */ 'p', 'o', 'p', 'q', 9, 0,
  /* 1707 */ 'c', 'm', 'o', 'v', 'p', 'q', 9, 0,
  /* 1715 */ 'l', 'a', 'r', 'q', 9, 0,
  /* 1721 */ 's', 'a', 'r', 'q', 9, 0,
  /* 1727 */ 'r', 'c', 'r', 'q', 9, 0,
  /* 1733 */ 's', 'h', 'r', 'q', 9, 0,
  /* 1739 */ 'r', 'o', 'r', 'q', 9, 0,
  /* 1745 */ 'x', 'r', 's', 't', 'o', 'r', 'q', 9, 0,
  /* 1754 */ 'x', 'o', 'r', 'q', 9, 0,
  /* 1760 */ 'b', 's', 'r', 'q', 9, 0,
  /* 1766 */ 'b', 'l', 's', 'r', 'q', 9, 0,
  /* 1773 */ 'b', 't', 'r', 'q', 9, 0,
  /* 1779 */ 's', 't', 'r', 'q', 9, 0,
  /* 1785 */ 'b', 'e', 'x', 't', 'r', 'q', 9, 0,
  /* 1793 */ 's', 'c', 'a', 's', 'q', 9, 0,
  /* 1800 */ 'm', 'o', 'v', 'a', 'b', 's', 'q', 9, 0,
  /* 1809 */ 'l', 'o', 'd', 's', 'q', 9, 0,
  /* 1816 */ 'l', 'f', 's', 'q', 9, 0,
  /* 1822 */ 'l', 'g', 's', 'q', 9, 0,
  /* 1828 */ 'c', 'm', 'o', 'v', 'n', 's', 'q', 9, 0,
  /* 1837 */ 'c', 'm', 'p', 's', 'q', 9, 0,
  /* 1844 */ 'l', 's', 's', 'q', 9, 0,
  /* 1850 */ 'b', 't', 's', 'q', 9, 0,
  /* 1856 */ 'c', 'm', 'o', 'v', 's', 'q', 9, 0,
  /* 1864 */ 'b', 't', 'q', 9, 0,
  /* 1869 */ 'l', 'g', 'd', 't', 'q', 9, 0,
  /* 1876 */ 's', 'g', 'd', 't', 'q', 9, 0,
  /* 1883 */ 'l', 'i', 'd', 't', 'q', 9, 0,
  /* 1890 */ 's', 'i', 'd', 't', 'q', 9, 0,
  /* 1897 */ 's', 'l', 'd', 't', 'q', 9, 0,
  /* 1904 */ 'l', 'r', 'e', 't', 'q', 9, 0,
  /* 1911 */ 'l', 'z', 'c', 'n', 't', 'q', 9, 0,
  /* 1919 */ 't', 'z', 'c', 'n', 't', 'q', 9, 0,
  /* 1927 */ 'n', 'o', 't', 'q', 9, 0,
  /* 1933 */ 'x', 's', 'a', 'v', 'e', 'o', 'p', 't', 'q', 9, 0,
  /* 1944 */ 't', 'e', 's', 't', 'q', 9, 0,
  /* 1951 */ 'p', 'e', 'x', 't', 'q', 9, 0,
  /* 1958 */ 'i', 'd', 'i', 'v', 'q', 9, 0,
  /* 1965 */ 'm', 'o', 'v', 'q', 9, 0,
  /* 1971 */ 's', 'm', 's', 'w', 'q', 9, 0,
  /* 1978 */ 'm', 'o', 'v', 's', 'w', 'q', 9, 0,
  /* 1986 */ 'm', 'o', 'v', 'z', 'w', 'q', 9, 0,
  /* 1994 */ 'a', 'd', 'c', 'x', 'q', 9, 0,
  /* 2001 */ 's', 'h', 'l', 'x', 'q', 9, 0,
  /* 2008 */ 'm', 'u', 'l', 'x', 'q', 9, 0,
  /* 2015 */ 'a', 'd', 'o', 'x', 'q', 9, 0,
  /* 2022 */ 's', 'a', 'r', 'x', 'q', 9, 0,
  /* 2029 */ 's', 'h', 'r', 'x', 'q', 9, 0,
  /* 2036 */ 'r', 'o', 'r', 'x', 'q', 9, 0,
  /* 2043 */ 'v', 'm', 'c', 'l', 'e', 'a', 'r', 9, 0,
  /* 2052 */ 'e', 'n', 't', 'e', 'r', 9, 0,
  /* 2059 */ 'x', 'r', 's', 't', 'o', 'r', 9, 0,
  /* 2067 */ 'v', 'e', 'r', 'r', 9, 0,
  /* 2073 */ 'b', 'e', 'x', 't', 'r', 9, 0,
  /* 2080 */ 'b', 'l', 'c', 's', 9, 0,
  /* 2086 */ 'j', 's', 9, 0,
  /* 2090 */ 'j', 'n', 's', 9, 0,
  /* 2095 */ 's', 'e', 't', 'n', 's', 9, 0,
  /* 2102 */ 's', 'e', 't', 's', 9, 0,
  /* 2108 */ 'i', 'n', 't', 9, 0,
  /* 2113 */ 'i', 'n', 'v', 'e', 'p', 't', 9, 0,
  /* 2121 */ 'x', 's', 'a', 'v', 'e', 'o', 'p', 't', 9, 0,
  /* 2131 */ 'v', 'm', 'p', 't', 'r', 's', 't', 9, 0,
  /* 2140 */ 'l', 'e', 'a', 'w', 9, 0,
  /* 2146 */ 'c', 'm', 'o', 'v', 'a', 'w', 9, 0,
  /* 2154 */ 's', 'b', 'b', 'w', 9, 0,
  /* 2160 */ 'm', 'o', 'v', 's', 'b', 'w', 9, 0,
  /* 2168 */ 's', 'u', 'b', 'w', 9, 0,
  /* 2174 */ 'c', 'm', 'o', 'v', 'b', 'w', 9, 0,
  /* 2182 */ 'm', 'o', 'v', 'z', 'b', 'w', 9, 0,
  /* 2190 */ 'a', 'd', 'c', 'w', 9, 0,
  /* 2196 */ 'd', 'e', 'c', 'w', 9, 0,
  /* 2202 */ 'i', 'n', 'c', 'w', 9, 0,
  /* 2208 */ 'b', 't', 'c', 'w', 9, 0,
  /* 2214 */ 'x', 'a', 'd', 'd', 'w', 9, 0,
  /* 2221 */ 'r', 'd', 's', 'e', 'e', 'd', 'w', 9, 0,
  /* 2230 */ 's', 'h', 'l', 'd', 'w', 9, 0,
  /* 2237 */ 'r', 'd', 'r', 'a', 'n', 'd', 'w', 9, 0,
  /* 2246 */ 's', 'h', 'r', 'd', 'w', 9, 0,
  /* 2253 */ 'c', 'm', 'o', 'v', 'a', 'e', 'w', 9, 0,
  /* 2262 */ 'c', 'm', 'o', 'v', 'b', 'e', 'w', 9, 0,
  /* 2271 */ 'c', 'm', 'o', 'v', 'g', 'e', 'w', 9, 0,
  /* 2280 */ 'c', 'm', 'o', 'v', 'l', 'e', 'w', 9, 0,
  /* 2289 */ 'c', 'm', 'o', 'v', 'n', 'e', 'w', 9, 0,
  /* 2298 */ 'c', 'm', 'o', 'v', 'e', 'w', 9, 0,
  /* 2306 */ 'b', 's', 'f', 'w', 9, 0,
  /* 2312 */ 'n', 'e', 'g', 'w', 9, 0,
  /* 2318 */ 'c', 'm', 'p', 'x', 'c', 'h', 'g', 'w', 9, 0,
  /* 2328 */ 'c', 'm', 'o', 'v', 'g', 'w', 9, 0,
  /* 2336 */ 'p', 'u', 's', 'h', 'w', 9, 0,
  /* 2343 */ 'r', 'c', 'l', 'w', 9, 0,
  /* 2349 */ 's', 'h', 'l', 'w', 9, 0,
  /* 2355 */ 'l', 'c', 'a', 'l', 'l', 'w', 9, 0,
  /* 2363 */ 'r', 'o', 'l', 'w', 9, 0,
  /* 2369 */ 'l', 's', 'l', 'w', 9, 0,
  /* 2375 */ 'i', 'm', 'u', 'l', 'w', 9, 0,
  /* 2382 */ 'c', 'm', 'o', 'v', 'l', 'w', 9, 0,
  /* 2390 */ 'i', 'n', 'w', 9, 0,
  /* 2395 */ 'c', 'm', 'o', 'v', 'n', 'o', 'w', 9, 0,
  /* 2404 */ 'c', 'm', 'o', 'v', 'o', 'w', 9, 0,
  /* 2412 */ 'c', 'm', 'p', 'w', 9, 0,
  /* 2418 */ 'l', 'j', 'm', 'p', 'w', 9, 0,
  /* 2425 */ 'c', 'm', 'o', 'v', 'n', 'p', 'w', 9, 0,
  /* 2434 */ 'n', 'o', 'p', 'w', 9, 0,
  /* 2440 */ 'p', 'o', 'p', 'w', 9, 0,
  /* 2446 */ 'c', 'm', 'o', 'v', 'p', 'w', 9, 0,
  /* 2454 */ 'l', 'a', 'r', 'w', 9, 0,
  /* 2460 */ 's', 'a', 'r', 'w', 9, 0,
  /* 2466 */ 'r', 'c', 'r', 'w', 9, 0,
  /* 2472 */ 'v', 'e', 'r', 'w', 9, 0,
  /* 2478 */ 's', 'h', 'r', 'w', 9, 0,
  /* 2484 */ 'r', 'o', 'r', 'w', 9, 0,
  /* 2490 */ 'x', 'o', 'r', 'w', 9, 0,
  /* 2496 */ 'b', 's', 'r', 'w', 9, 0,
  /* 2502 */ 'b', 't', 'r', 'w', 9, 0,
  /* 2508 */ 'l', 't', 'r', 'w', 9, 0,
  /* 2514 */ 's', 't', 'r', 'w', 9, 0,
  /* 2520 */ 's', 'c', 'a', 's', 'w', 9, 0,
  /* 2527 */ 'm', 'o', 'v', 'a', 'b', 's', 'w', 9, 0,
  /* 2536 */ 'l', 'd', 's', 'w', 9, 0,
  /* 2542 */ 'l', 'o', 'd', 's', 'w', 9, 0,
  /* 2549 */ 'l', 'e', 's', 'w', 9, 0,
  /* 2555 */ 'l', 'f', 's', 'w', 9, 0,
  /* 2561 */ 'l', 'g', 's', 'w', 9, 0,
  /* 2567 */ 'c', 'm', 'o', 'v', 'n', 's', 'w', 9, 0,
  /* 2576 */ 'c', 'm', 'p', 's', 'w', 9, 0,
  /* 2583 */ 'l', 's', 's', 'w', 9, 0,
  /* 2589 */ 'b', 't', 's', 'w', 9, 0,
  /* 2595 */ 'o', 'u', 't', 's', 'w', 9, 0,
  /* 2602 */ 'c', 'm', 'o', 'v', 's', 'w', 9, 0,
  /* 2610 */ 'b', 't', 'w', 9, 0,
  /* 2615 */ 'l', 'g', 'd', 't', 'w', 9, 0,
  /* 2622 */ 's', 'g', 'd', 't', 'w', 9, 0,
  /* 2629 */ 'l', 'i', 'd', 't', 'w', 9, 0,
  /* 2636 */ 's', 'i', 'd', 't', 'w', 9, 0,
  /* 2643 */ 'l', 'l', 'd', 't', 'w', 9, 0,
  /* 2650 */ 's', 'l', 'd', 't', 'w', 9, 0,
  /* 2657 */ 'l', 'r', 'e', 't', 'w', 9, 0,
  /* 2664 */ 'l', 'z', 'c', 'n', 't', 'w', 9, 0,
  /* 2672 */ 't', 'z', 'c', 'n', 't', 'w', 9, 0,
  /* 2680 */ 'n', 'o', 't', 'w', 9, 0,
  /* 2686 */ 't', 'e', 's', 't', 'w', 9, 0,
  /* 2693 */ 'i', 'd', 'i', 'v', 'w', 9, 0,
  /* 2700 */ 'm', 'o', 'v', 'w', 9, 0,
  /* 2706 */ 'l', 'm', 's', 'w', 'w', 9, 0,
  /* 2713 */ 's', 'm', 's', 'w', 'w', 9, 0,
  /* 2720 */ 'j', 'e', 'c', 'x', 'z', 9, 0,
  /* 2727 */ 'j', 'c', 'x', 'z', 9, 0,
  /* 2733 */ 'j', 'r', 'c', 'x', 'z', 9, 0,
  /* 2740 */ 'm', 'o', 'v', 'a', 'b', 's', 'b', 9, '%', 'a', 'l', ',', 32, 0,
  /* 2754 */ 's', 't', 'o', 's', 'b', 9, '%', 'a', 'l', ',', 32, 0,
  /* 2766 */ 'o', 'u', 't', 'b', 9, '%', 'a', 'l', ',', 32, 0,
  /* 2777 */ 'm', 'o', 'v', 'b', 9, '%', 'a', 'l', ',', 32, 0,
  /* 2788 */ 'r', 'c', 'l', 'b', 9, '%', 'c', 'l', ',', 32, 0,
  /* 2799 */ 's', 'h', 'l', 'b', 9, '%', 'c', 'l', ',', 32, 0,
  /* 2810 */ 'r', 'o', 'l', 'b', 9, '%', 'c', 'l', ',', 32, 0,
  /* 2821 */ 's', 'a', 'r', 'b', 9, '%', 'c', 'l', ',', 32, 0,
  /* 2832 */ 'r', 'c', 'r', 'b', 9, '%', 'c', 'l', ',', 32, 0,
  /* 2843 */ 's', 'h', 'r', 'b', 9, '%', 'c', 'l', ',', 32, 0,
  /* 2854 */ 'r', 'o', 'r', 'b', 9, '%', 'c', 'l', ',', 32, 0,
  /* 2865 */ 's', 'h', 'l', 'd', 'l', 9, '%', 'c', 'l', ',', 32, 0,
  /* 2877 */ 's', 'h', 'r', 'd', 'l', 9, '%', 'c', 'l', ',', 32, 0,
  /* 2889 */ 'r', 'c', 'l', 'l', 9, '%', 'c', 'l', ',', 32, 0,
  /* 2900 */ 's', 'h', 'l', 'l', 9, '%', 'c', 'l', ',', 32, 0,
  /* 2911 */ 'r', 'o', 'l', 'l', 9, '%', 'c', 'l', ',', 32, 0,
  /* 2922 */ 's', 'a', 'r', 'l', 9, '%', 'c', 'l', ',', 32, 0,
  /* 2933 */ 'r', 'c', 'r', 'l', 9, '%', 'c', 'l', ',', 32, 0,
  /* 2944 */ 's', 'h', 'r', 'l', 9, '%', 'c', 'l', ',', 32, 0,
  /* 2955 */ 'r', 'o', 'r', 'l', 9, '%', 'c', 'l', ',', 32, 0,
  /* 2966 */ 's', 'h', 'l', 'd', 'q', 9, '%', 'c', 'l', ',', 32, 0,
  /* 2978 */ 's', 'h', 'r', 'd', 'q', 9, '%', 'c', 'l', ',', 32, 0,
  /* 2990 */ 'r', 'c', 'l', 'q', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3001 */ 's', 'h', 'l', 'q', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3012 */ 'r', 'o', 'l', 'q', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3023 */ 's', 'a', 'r', 'q', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3034 */ 'r', 'c', 'r', 'q', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3045 */ 's', 'h', 'r', 'q', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3056 */ 'r', 'o', 'r', 'q', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3067 */ 's', 'h', 'l', 'd', 'w', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3079 */ 's', 'h', 'r', 'd', 'w', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3091 */ 'r', 'c', 'l', 'w', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3102 */ 's', 'h', 'l', 'w', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3113 */ 'r', 'o', 'l', 'w', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3124 */ 's', 'a', 'r', 'w', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3135 */ 'r', 'c', 'r', 'w', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3146 */ 's', 'h', 'r', 'w', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3157 */ 'r', 'o', 'r', 'w', 9, '%', 'c', 'l', ',', 32, 0,
  /* 3168 */ 'm', 'o', 'v', 'a', 'b', 's', 'w', 9, '%', 'a', 'x', ',', 32, 0,
  /* 3182 */ 's', 't', 'o', 's', 'w', 9, '%', 'a', 'x', ',', 32, 0,
  /* 3194 */ 'o', 'u', 't', 'w', 9, '%', 'a', 'x', ',', 32, 0,
  /* 3205 */ 'm', 'o', 'v', 'w', 9, '%', 'a', 'x', ',', 32, 0,
  /* 3216 */ 'm', 'o', 'v', 'a', 'b', 's', 'l', 9, '%', 'e', 'a', 'x', ',', 32, 0,
  /* 3231 */ 's', 't', 'o', 's', 'l', 9, '%', 'e', 'a', 'x', ',', 32, 0,
  /* 3244 */ 'o', 'u', 't', 'l', 9, '%', 'e', 'a', 'x', ',', 32, 0,
  /* 3256 */ 'm', 'o', 'v', 'l', 9, '%', 'e', 'a', 'x', ',', 32, 0,
  /* 3268 */ 'm', 'o', 'v', 'a', 'b', 's', 'q', 9, '%', 'r', 'a', 'x', ',', 32, 0,
  /* 3283 */ 's', 't', 'o', 's', 'q', 9, '%', 'r', 'a', 'x', ',', 32, 0,
  /* 3296 */ 'i', 'n', 's', 'b', 9, '%', 'd', 'x', ',', 32, 0,
  /* 3307 */ 'i', 'n', 's', 'l', 9, '%', 'd', 'x', ',', 32, 0,
  /* 3318 */ 'i', 'n', 's', 'w', 9, '%', 'd', 'x', ',', 32, 0,
  /* 3329 */ '#', 'V', 'A', 'A', 'R', 'G', '_', '6', '4', 32, 0,
  /* 3340 */ 'r', 'e', 't', 9, '#', 'e', 'h', '_', 'r', 'e', 't', 'u', 'r', 'n', ',', 32, 'a', 'd', 'd', 'r', ':', 32, 0,
  /* 3363 */ '#', 'V', 'A', 'S', 'T', 'A', 'R', 'T', '_', 'S', 'A', 'V', 'E', '_', 'X', 'M', 'M', '_', 'R', 'E', 'G', 'S', 32, 0,
  /* 3387 */ '#', 'C', 'M', 'O', 'V', '_', 'G', 'R', '3', '2', '*', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3407 */ '#', 'C', 'M', 'O', 'V', '_', 'G', 'R', '1', '6', '*', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3427 */ '#', 'C', 'M', 'O', 'V', '_', 'R', 'F', 'P', '8', '0', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3447 */ '#', 'A', 'T', 'O', 'M', 'S', 'U', 'B', '6', '4', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3468 */ '#', 'A', 'T', 'O', 'M', 'A', 'D', 'D', '6', '4', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3489 */ '#', 'A', 'T', 'O', 'M', 'A', 'N', 'D', '6', '4', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3510 */ '#', 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '6', '4', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3532 */ '#', 'A', 'T', 'O', 'M', 'M', 'I', 'N', '6', '4', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3553 */ '#', 'A', 'T', 'O', 'M', 'U', 'M', 'I', 'N', '6', '4', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3575 */ '#', 'A', 'T', 'O', 'M', 'S', 'W', 'A', 'P', '6', '4', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3597 */ '#', 'A', 'T', 'O', 'M', 'O', 'R', '6', '4', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3617 */ '#', 'A', 'T', 'O', 'M', 'X', 'O', 'R', '6', '4', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3638 */ '#', 'A', 'T', 'O', 'M', 'M', 'A', 'X', '6', '4', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3659 */ '#', 'A', 'T', 'O', 'M', 'U', 'M', 'A', 'X', '6', '4', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3681 */ '#', 'A', 'T', 'O', 'M', 'A', 'N', 'D', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3700 */ '#', 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3720 */ '#', 'C', 'M', 'O', 'V', '_', 'V', '4', 'F', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3740 */ '#', 'C', 'M', 'O', 'V', '_', 'V', '1', '6', 'F', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3761 */ '#', 'C', 'M', 'O', 'V', '_', 'V', '8', 'F', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3781 */ '#', 'A', 'T', 'O', 'M', 'M', 'I', 'N', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3800 */ '#', 'A', 'T', 'O', 'M', 'U', 'M', 'I', 'N', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3820 */ '#', 'C', 'M', 'O', 'V', '_', 'R', 'F', 'P', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3840 */ '#', 'C', 'M', 'O', 'V', '_', 'F', 'R', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3859 */ '#', 'A', 'T', 'O', 'M', 'O', 'R', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3877 */ '#', 'A', 'T', 'O', 'M', 'X', 'O', 'R', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3896 */ '#', 'A', 'T', 'O', 'M', 'M', 'A', 'X', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3915 */ '#', 'A', 'T', 'O', 'M', 'U', 'M', 'A', 'X', '3', '2', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3935 */ '#', 'A', 'T', 'O', 'M', 'A', 'N', 'D', '6', '4', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3954 */ '#', 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '6', '4', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3974 */ '#', 'C', 'M', 'O', 'V', '_', 'V', '2', 'F', '6', '4', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 3994 */ '#', 'C', 'M', 'O', 'V', '_', 'V', '4', 'F', '6', '4', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4014 */ '#', 'C', 'M', 'O', 'V', '_', 'V', '8', 'F', '6', '4', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4034 */ '#', 'C', 'M', 'O', 'V', '_', 'V', '2', 'I', '6', '4', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4054 */ '#', 'C', 'M', 'O', 'V', '_', 'V', '4', 'I', '6', '4', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4074 */ '#', 'C', 'M', 'O', 'V', '_', 'V', '8', 'I', '6', '4', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4094 */ '#', 'A', 'T', 'O', 'M', 'M', 'I', 'N', '6', '4', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4113 */ '#', 'A', 'T', 'O', 'M', 'U', 'M', 'I', 'N', '6', '4', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4133 */ '#', 'C', 'M', 'O', 'V', '_', 'R', 'F', 'P', '6', '4', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4153 */ '#', 'C', 'M', 'O', 'V', '_', 'F', 'R', '6', '4', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4172 */ '#', 'A', 'T', 'O', 'M', 'O', 'R', '6', '4', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4190 */ '#', 'A', 'T', 'O', 'M', 'X', 'O', 'R', '6', '4', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4209 */ '#', 'A', 'T', 'O', 'M', 'M', 'A', 'X', '6', '4', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4228 */ '#', 'A', 'T', 'O', 'M', 'U', 'M', 'A', 'X', '6', '4', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4248 */ '#', 'A', 'T', 'O', 'M', 'A', 'N', 'D', '1', '6', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4267 */ '#', 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '1', '6', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4287 */ '#', 'A', 'T', 'O', 'M', 'M', 'I', 'N', '1', '6', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4306 */ '#', 'A', 'T', 'O', 'M', 'U', 'M', 'I', 'N', '1', '6', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4326 */ '#', 'A', 'T', 'O', 'M', 'O', 'R', '1', '6', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4344 */ '#', 'A', 'T', 'O', 'M', 'X', 'O', 'R', '1', '6', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4363 */ '#', 'A', 'T', 'O', 'M', 'M', 'A', 'X', '1', '6', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4382 */ '#', 'A', 'T', 'O', 'M', 'U', 'M', 'A', 'X', '1', '6', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4402 */ '#', 'A', 'T', 'O', 'M', 'A', 'N', 'D', '8', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4420 */ '#', 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '8', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4439 */ '#', 'A', 'T', 'O', 'M', 'M', 'I', 'N', '8', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4457 */ '#', 'A', 'T', 'O', 'M', 'U', 'M', 'I', 'N', '8', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4476 */ '#', 'C', 'M', 'O', 'V', '_', 'G', 'R', '8', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4494 */ '#', 'A', 'T', 'O', 'M', 'O', 'R', '8', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4511 */ '#', 'A', 'T', 'O', 'M', 'X', 'O', 'R', '8', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4529 */ '#', 'A', 'T', 'O', 'M', 'M', 'A', 'X', '8', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4547 */ '#', 'A', 'T', 'O', 'M', 'U', 'M', 'A', 'X', '8', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4566 */ '#', 'A', 'C', 'Q', 'U', 'I', 'R', 'E', '_', 'M', 'O', 'V', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4587 */ '#', 'R', 'E', 'L', 'E', 'A', 'S', 'E', '_', 'M', 'O', 'V', 32, 'P', 'S', 'E', 'U', 'D', 'O', '!', 0,
  /* 4608 */ 'l', 'c', 'a', 'l', 'l', 'l', 9, '*', 0,
  /* 4617 */ 'l', 'j', 'm', 'p', 'l', 9, '*', 0,
  /* 4625 */ 'l', 'c', 'a', 'l', 'l', 'q', 9, '*', 0,
  /* 4634 */ 'l', 'j', 'm', 'p', 'q', 9, '*', 0,
  /* 4642 */ 'l', 'c', 'a', 'l', 'l', 'w', 9, '*', 0,
  /* 4651 */ 'l', 'j', 'm', 'p', 'w', 9, '*', 0,
  /* 4659 */ 'x', 's', 'h', 'a', '1', 0,
  /* 4665 */ 'i', 'n', 't', '1', 0,
  /* 4670 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '3', '2', 0,
  /* 4689 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '3', '2', 0,
  /* 4707 */ '#', 32, 'T', 'L', 'S', 'C', 'a', 'l', 'l', '_', '3', '2', 0,
  /* 4720 */ '#', 32, 'T', 'L', 'S', '_', 'a', 'd', 'd', 'r', '3', '2', 0,
  /* 4733 */ '#', 32, 'T', 'L', 'S', '_', 'b', 'a', 's', 'e', '_', 'a', 'd', 'd', 'r', '3', '2', 0,
  /* 4751 */ 'u', 'd', '2', 0,
  /* 4755 */ 'i', 'n', 't', '3', 0,
  /* 4760 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '6', '4', 0,
  /* 4779 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '6', '4', 0,
  /* 4797 */ '#', 32, 'T', 'L', 'S', 'C', 'a', 'l', 'l', '_', '6', '4', 0,
  /* 4810 */ '#', 32, 'T', 'L', 'S', '_', 'a', 'd', 'd', 'r', '6', '4', 0,
  /* 4823 */ '#', 32, 'T', 'L', 'S', '_', 'b', 'a', 's', 'e', '_', 'a', 'd', 'd', 'r', '6', '4', 0,
  /* 4841 */ 'r', 'e', 'x', '6', '4', 0,
  /* 4847 */ 'd', 'a', 't', 'a', '1', '6', 0,
  /* 4854 */ 'x', 's', 'h', 'a', '2', '5', '6', 0,
  /* 4862 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 4875 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 4882 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 4892 */ '#', 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 4910 */ '#', 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 4926 */ '#', 'M', 'E', 'M', 'B', 'A', 'R', 'R', 'I', 'E', 'R', 0,
  /* 4938 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 4953 */ 'a', 'a', 'a', 0,
  /* 4957 */ 'd', 'a', 'a', 0,
  /* 4961 */ 'u', 'd', '2', 'b', 0,
  /* 4966 */ 'x', 'c', 'r', 'y', 'p', 't', 'e', 'c', 'b', 0,
  /* 4976 */ 'x', 'c', 'r', 'y', 'p', 't', 'c', 'f', 'b', 0,
  /* 4986 */ 'x', 'c', 'r', 'y', 'p', 't', 'o', 'f', 'b', 0,
  /* 4996 */ 'r', 'e', 'p', ';', 's', 't', 'o', 's', 'b', 0,
  /* 5006 */ 'r', 'e', 'p', ';', 'm', 'o', 'v', 's', 'b', 0,
  /* 5016 */ 'x', 'l', 'a', 't', 'b', 0,
  /* 5022 */ 'c', 'l', 'a', 'c', 0,
  /* 5027 */ 's', 't', 'a', 'c', 0,
  /* 5032 */ 'x', 'c', 'r', 'y', 'p', 't', 'c', 'b', 'c', 0,
  /* 5042 */ 'g', 'e', 't', 's', 'e', 'c', 0,
  /* 5049 */ 's', 'a', 'l', 'c', 0,
  /* 5054 */ 'c', 'l', 'c', 0,
  /* 5058 */ 'c', 'm', 'c', 0,
  /* 5062 */ 'r', 'd', 'p', 'm', 'c', 0,
  /* 5068 */ 'v', 'm', 'f', 'u', 'n', 'c', 0,
  /* 5075 */ 'r', 'd', 't', 's', 'c', 0,
  /* 5081 */ 's', 't', 'c', 0,
  /* 5085 */ 'c', 'p', 'u', 'i', 'd', 0,
  /* 5091 */ 'c', 'l', 'd', 0,
  /* 5095 */ 'c', 'l', 't', 'd', 0,
  /* 5100 */ 's', 't', 'd', 0,
  /* 5104 */ 'c', 'w', 't', 'd', 0,
  /* 5109 */ 'w', 'b', 'i', 'n', 'v', 'd', 0,
  /* 5116 */ 'v', 'm', 'r', 'e', 's', 'u', 'm', 'e', 0,
  /* 5125 */ 'r', 'e', 'p', 'n', 'e', 0,
  /* 5131 */ 'x', 's', 't', 'o', 'r', 'e', 0,
  /* 5138 */ 'l', 'e', 'a', 'v', 'e', 0,
  /* 5144 */ 'v', 'm', 'x', 'o', 'f', 'f', 0,
  /* 5151 */ 'l', 'a', 'h', 'f', 0,
  /* 5156 */ 's', 'a', 'h', 'f', 0,
  /* 5161 */ 'v', 'm', 'l', 'a', 'u', 'n', 'c', 'h', 0,
  /* 5170 */ 'c', 'l', 'g', 'i', 0,
  /* 5175 */ 's', 't', 'g', 'i', 0,
  /* 5180 */ 'c', 'l', 'i', 0,
  /* 5184 */ 's', 't', 'i', 0,
  /* 5188 */ '#', 32, 'w', 'i', 'n', '3', '2', 32, 'f', 'p', 't', 'o', 'u', 'i', 0,
  /* 5203 */ 'l', 'o', 'c', 'k', 0,
  /* 5208 */ 'i', 'n', 'b', 9, '%', 'd', 'x', ',', 32, '%', 'a', 'l', 0,
  /* 5221 */ 'p', 'u', 's', 'h', 'a', 'l', 0,
  /* 5228 */ 'p', 'o', 'p', 'a', 'l', 0,
  /* 5234 */ 'p', 'u', 's', 'h', 'f', 'l', 0,
  /* 5241 */ 'p', 'o', 'p', 'f', 'l', 0,
  /* 5247 */ 'v', 'm', 'm', 'c', 'a', 'l', 'l', 0,
  /* 5255 */ 'v', 'm', 'c', 'a', 'l', 'l', 0,
  /* 5262 */ 's', 'y', 's', 'c', 'a', 'l', 'l', 0,
  /* 5270 */ 'r', 'e', 'p', ';', 's', 't', 'o', 's', 'l', 0,
  /* 5280 */ 'r', 'e', 'p', ';', 'm', 'o', 'v', 's', 'l', 0,
  /* 5290 */ 'i', 'r', 'e', 't', 'l', 0,
  /* 5296 */ 'l', 'r', 'e', 't', 'l', 0,
  /* 5302 */ 's', 'y', 's', 'r', 'e', 't', 'l', 0,
  /* 5310 */ 's', 'y', 's', 'e', 'x', 'i', 't', 'l', 0,
  /* 5319 */ 'c', 'w', 't', 'l', 0,
  /* 5324 */ 'm', 'o', 'n', 't', 'm', 'u', 'l', 0,
  /* 5332 */ 'f', 's', 'e', 't', 'p', 'm', 0,
  /* 5339 */ 'r', 's', 'm', 0,
  /* 5343 */ '#', 32, 'd', 'y', 'n', 'a', 'm', 'i', 'c', 32, 's', 't', 'a', 'c', 'k', 32, 'a', 'l', 'l', 'o', 'c', 'a', 't', 'i', 'o', 'n', 0,
  /* 5370 */ 'i', 'n', 't', 'o', 0,
  /* 5375 */ 'c', 'q', 't', 'o', 0,
  /* 5380 */ 'r', 'd', 't', 's', 'c', 'p', 0,
  /* 5387 */ 'r', 'e', 'p', 0,
  /* 5391 */ 'n', 'o', 'p', 0,
  /* 5395 */ 'p', 'u', 's', 'h', 'f', 'q', 0,
  /* 5402 */ 'p', 'o', 'p', 'f', 'q', 0,
  /* 5408 */ 'r', 'e', 'p', ';', 's', 't', 'o', 's', 'q', 0,
  /* 5418 */ 'r', 'e', 'p', ';', 'm', 'o', 'v', 's', 'q', 0,
  /* 5428 */ 'i', 'r', 'e', 't', 'q', 0,
  /* 5434 */ 'l', 'r', 'e', 't', 'q', 0,
  /* 5440 */ 's', 'y', 's', 'r', 'e', 't', 'q', 0,
  /* 5448 */ 's', 'y', 's', 'e', 'x', 'i', 't', 'q', 0,
  /* 5457 */ 'c', 'l', 't', 'q', 0,
  /* 5462 */ 's', 'y', 's', 'e', 'n', 't', 'e', 'r', 0,
  /* 5471 */ 'r', 'd', 'm', 's', 'r', 0,
  /* 5477 */ 'w', 'r', 'm', 's', 'r', 0,
  /* 5483 */ 'x', 'c', 'r', 'y', 'p', 't', 'c', 't', 'r', 0,
  /* 5493 */ 'a', 'a', 's', 0,
  /* 5497 */ 'd', 'a', 's', 0,
  /* 5501 */ 'p', 'u', 's', 'h', 'l', 9, '%', 'c', 's', 0,
  /* 5511 */ 'p', 'u', 's', 'h', 'w', 9, '%', 'c', 's', 0,
  /* 5521 */ 'p', 'u', 's', 'h', 'l', 9, '%', 'd', 's', 0,
  /* 5531 */ 'p', 'o', 'p', 'l', 9, '%', 'd', 's', 0,
  /* 5540 */ 'p', 'u', 's', 'h', 'w', 9, '%', 'd', 's', 0,
  /* 5550 */ 'p', 'o', 'p', 'w', 9, '%', 'd', 's', 0,
  /* 5559 */ 'p', 'u', 's', 'h', 'l', 9, '%', 'e', 's', 0,
  /* 5569 */ 'p', 'o', 'p', 'l', 9, '%', 'e', 's', 0,
  /* 5578 */ 'p', 'u', 's', 'h', 'w', 9, '%', 'e', 's', 0,
  /* 5588 */ 'p', 'o', 'p', 'w', 9, '%', 'e', 's', 0,
  /* 5597 */ 'p', 'u', 's', 'h', 'l', 9, '%', 'f', 's', 0,
  /* 5607 */ 'p', 'o', 'p', 'l', 9, '%', 'f', 's', 0,
  /* 5616 */ 'p', 'u', 's', 'h', 'q', 9, '%', 'f', 's', 0,
  /* 5626 */ 'p', 'o', 'p', 'q', 9, '%', 'f', 's', 0,
  /* 5635 */ 'p', 'u', 's', 'h', 'w', 9, '%', 'f', 's', 0,
  /* 5645 */ 'p', 'o', 'p', 'w', 9, '%', 'f', 's', 0,
  /* 5654 */ 'p', 'u', 's', 'h', 'l', 9, '%', 'g', 's', 0,
  /* 5664 */ 'p', 'o', 'p', 'l', 9, '%', 'g', 's', 0,
  /* 5673 */ 'p', 'u', 's', 'h', 'q', 9, '%', 'g', 's', 0,
  /* 5683 */ 'p', 'o', 'p', 'q', 9, '%', 'g', 's', 0,
  /* 5692 */ 'p', 'u', 's', 'h', 'w', 9, '%', 'g', 's', 0,
  /* 5702 */ 'p', 'o', 'p', 'w', 9, '%', 'g', 's', 0,
  /* 5711 */ 's', 'w', 'a', 'p', 'g', 's', 0,
  /* 5718 */ '#', 32, 'v', 'a', 'r', 'i', 'a', 'b', 'l', 'e', 32, 's', 'i', 'z', 'e', 'd', 32, 'a', 'l', 'l', 'o', 'c', 'a', 32, 'f', 'o', 'r', 32, 's', 'e', 'g', 'm', 'e', 'n', 't', 'e', 'd', 32, 's', 't', 'a', 'c', 'k', 's', 0,
  /* 5763 */ 'p', 'u', 's', 'h', 'l', 9, '%', 's', 's', 0,
  /* 5773 */ 'p', 'o', 'p', 'l', 9, '%', 's', 's', 0,
  /* 5782 */ 'p', 'u', 's', 'h', 'w', 9, '%', 's', 's', 0,
  /* 5792 */ 'p', 'o', 'p', 'w', 9, '%', 's', 's', 0,
  /* 5801 */ 'c', 'l', 't', 's', 0,
  /* 5806 */ 'h', 'l', 't', 0,
  /* 5810 */ 'x', 'g', 'e', 't', 'b', 'v', 0,
  /* 5817 */ 'x', 's', 'e', 't', 'b', 'v', 0,
  /* 5824 */ 'p', 'u', 's', 'h', 'a', 'w', 0,
  /* 5831 */ 'p', 'o', 'p', 'a', 'w', 0,
  /* 5837 */ 'p', 'u', 's', 'h', 'f', 'w', 0,
  /* 5844 */ 'p', 'o', 'p', 'f', 'w', 0,
  /* 5850 */ 'r', 'e', 'p', ';', 's', 't', 'o', 's', 'w', 0,
  /* 5860 */ 'r', 'e', 'p', ';', 'm', 'o', 'v', 's', 'w', 0,
  /* 5870 */ 'c', 'b', 't', 'w', 0,
  /* 5875 */ 'i', 'r', 'e', 't', 'w', 0,
  /* 5881 */ 'l', 'r', 'e', 't', 'w', 0,
  /* 5887 */ 'i', 'n', 'w', 9, '%', 'd', 'x', ',', 32, '%', 'a', 'x', 0,
  /* 5900 */ 'v', 'm', 'l', 'o', 'a', 'd', 9, '%', 'e', 'a', 'x', 0,
  /* 5912 */ 'v', 'm', 's', 'a', 'v', 'e', 9, '%', 'e', 'a', 'x', 0,
  /* 5924 */ 'v', 'm', 'r', 'u', 'n', 9, '%', 'e', 'a', 'x', 0,
  /* 5935 */ 's', 'k', 'i', 'n', 'i', 't', 9, '%', 'e', 'a', 'x', 0,
  /* 5947 */ 'i', 'n', 'v', 'l', 'p', 'g', 'a', 9, '%', 'e', 'c', 'x', ',', 32, '%', 'e', 'a', 'x', 0,
  /* 5966 */ 'i', 'n', 'l', 9, '%', 'd', 'x', ',', 32, '%', 'e', 'a', 'x', 0,
  /* 5980 */ 'v', 'm', 'l', 'o', 'a', 'd', 9, '%', 'r', 'a', 'x', 0,
  /* 5992 */ 'v', 'm', 's', 'a', 'v', 'e', 9, '%', 'r', 'a', 'x', 0,
  /* 6004 */ 'v', 'm', 'r', 'u', 'n', 9, '%', 'r', 'a', 'x', 0,
  /* 6015 */ 'i', 'n', 'v', 'l', 'p', 'g', 'a', 9, '%', 'e', 'c', 'x', ',', 32, '%', 'r', 'a', 'x', 0,
  /* 6034 */ 'o', 'u', 't', 'b', 9, '%', 'a', 'l', ',', 32, '%', 'd', 'x', 0,
  /* 6048 */ 'o', 'u', 't', 'w', 9, '%', 'a', 'x', ',', 32, '%', 'd', 'x', 0,
  /* 6062 */ 'o', 'u', 't', 'l', 9, '%', 'e', 'a', 'x', ',', 32, '%', 'd', 'x', 0,
  };
#endif

  // Emit the opcode for the instruction.
  uint32_t Bits = OpInfo[MCInst_getOpcode(MI)];
  // assert(Bits != 0 && "Cannot print this instruction.");
#ifndef CAPSTONE_DIET
  SStream_concat(O, "%s", AsmStrs+(Bits & 8191)-1);
#endif


  // Fragment 0 encoded into 6 bits for 40 unique commands.
  //printf("Frag-0: %"PRIu64"\n", (Bits >> 13) & 63);
  switch ((Bits >> 13) & 63) {
  default:   // unreachable.
  case 0:
    // DBG_VALUE, BUNDLE, LIFETIME_START, LIFETIME_END, AAA, AAS, ACQUIRE_MOV...
    return;
    break;
  case 1:
    // AAD8i8, AAM8i8, ADC16i16, ADC32i32, ADC64i32, ADC8i8, ADD16i16, ADD32i...
    printOperand(MI, 0, O); 
    break;
  case 2:
    // ADC16mi, ADC16mi8, ADC16mr, ADC32mi, ADC32mi8, ADC32mr, ADC64mi32, ADC...
    printOperand(MI, 5, O); 
    SStream_concat(O, "%s", ", "); 
    break;
  case 3:
    // ADC16ri, ADC16ri8, ADC16rr, ADC16rr_REV, ADC32ri, ADC32ri8, ADC32rr, A...
    printOperand(MI, 2, O); 
    SStream_concat(O, "%s", ", "); 
    break;
  case 4:
    // ADC16rm, ADD16rm, AND16rm, CMOVA16rm, CMOVAE16rm, CMOVB16rm, CMOVBE16r...
    printi16mem(MI, 2, O); 
    SStream_concat(O, "%s", ", "); 
    break;
  case 5:
    // ADC32rm, ADD32rm, AND32rm, ANDN32rm, CMOVA32rm, CMOVAE32rm, CMOVB32rm,...
    printi32mem(MI, 2, O); 
    SStream_concat(O, "%s", ", "); 
    break;
  case 6:
    // ADC64rm, ADD64rm, AND64rm, ANDN64rm, CMOVA64rm, CMOVAE64rm, CMOVB64rm,...
    printi64mem(MI, 2, O); 
    SStream_concat(O, "%s", ", "); 
    break;
  case 7:
    // ADC8rm, ADD8rm, AND8rm, OR8rm, SBB8rm, SUB8rm, XOR8rm
    printi8mem(MI, 2, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 1, O); 
    return;
    break;
  case 8:
    // ADCX32rm, ADOX32rm, BLCFILL32rm, BLCI32rm, BLCIC32rm, BLCMSK32rm, BLCS...
    printi32mem(MI, 1, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 0, O); 
    return;
    break;
  case 9:
    // ADCX32rr, ADCX64rr, ADOX32rr, ADOX64rr, ARPL16rr, BLCFILL32rr, BLCFILL...
    printOperand(MI, 1, O); 
    SStream_concat(O, "%s", ", "); 
    break;
  case 10:
    // ADCX64rm, ADOX64rm, BLCFILL64rm, BLCI64rm, BLCIC64rm, BLCMSK64rm, BLCS...
    printi64mem(MI, 1, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 0, O); 
    return;
    break;
  case 11:
    // BEXTR32rm, BEXTR64rm, BEXTRI32mi, BEXTRI64mi, BZHI32rm, BZHI64rm, IMUL...
    printOperand(MI, 6, O); 
    SStream_concat(O, "%s", ", "); 
    break;
  case 12:
    // BOUNDS16rm, BSF16rm, BSR16rm, CMP16rm, LAR16rm, LAR32rm, LAR64rm, LSL1...
    printi16mem(MI, 1, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 0, O); 
    return;
    break;
  case 13:
    // CALL16m, DEC16m, DEC64_16m, DIV16m, IDIV16m, IMUL16m, INC16m, INC64_16...
    printi16mem(MI, 0, O); 
    return;
    break;
  case 14:
    // CALL32m, DEC32m, DEC64_32m, DIV32m, IDIV32m, IMUL32m, INC32m, INC64_32...
    printi32mem(MI, 0, O); 
    break;
  case 15:
    // CALL64m, CMPXCHG8B, DEC64m, DIV64m, IDIV64m, IMUL64m, INC64m, JMP64m, ...
    printi64mem(MI, 0, O); 
    break;
  case 16:
    // CALL64pcrel32, CALLpcrel16, CALLpcrel32, EH_SjLj_Setup, JAE_1, JAE_2, ...
    printPCRelImm(MI, 0, O); 
    break;
  case 17:
    // CMP8rm, MOV8rm, MOV8rm_NOREX, MOVSX16rm8, MOVSX32rm8, MOVSX64rm8, MOVZ...
    printi8mem(MI, 1, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 0, O); 
    break;
  case 18:
    // CMPS16, IN16, SCAS16, STOSW
    printDstIdx16(MI, 0, O); 
    break;
  case 19:
    // CMPS32, IN32, SCAS32, STOSL
    printDstIdx32(MI, 0, O); 
    break;
  case 20:
    // CMPS64, SCAS64, STOSQ
    printDstIdx64(MI, 0, O); 
    break;
  case 21:
    // CMPS8, IN8, SCAS8, STOSB
    printDstIdx8(MI, 0, O); 
    break;
  case 22:
    // CMPXCHG16B, LCMPXCHG16B
    printi128mem(MI, 0, O); 
    return;
    break;
  case 23:
    // DEC8m, DIV8m, IDIV8m, IMUL8m, INC8m, INVLPG, LOCK_DEC8m, LOCK_INC8m, M...
    printi8mem(MI, 0, O); 
    return;
    break;
  case 24:
    // FARCALL16m, FARCALL32m, FARCALL64, FARJMP16m, FARJMP32m, FARJMP64, LGD...
    printopaquemem(MI, 0, O); 
    return;
    break;
  case 25:
    // INVEPT32, INVEPT64, INVPCID32, INVPCID64, INVVPID32, INVVPID64
    printi128mem(MI, 1, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 0, O); 
    return;
    break;
  case 26:
    // LDS16rm, LDS32rm, LES16rm, LES32rm, LFS16rm, LFS32rm, LFS64rm, LGS16rm...
    printopaquemem(MI, 1, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 0, O); 
    return;
    break;
  case 27:
    // LODSB, OUTSB
    printSrcIdx8(MI, 0, O); 
    break;
  case 28:
    // LODSL, OUTSL
    printSrcIdx32(MI, 0, O); 
    break;
  case 29:
    // LODSQ
    printSrcIdx64(MI, 0, O); 
    SStream_concat(O, "%s", ", %rax"); 
    return;
    break;
  case 30:
    // LODSW, OUTSW
    printSrcIdx16(MI, 0, O); 
    break;
  case 31:
    // MOV16ao16, MOV16ao16_16, MOV16o16a, MOV16o16a_16, MOV64ao16, MOV64o16a
    printMemOffs16(MI, 0, O); 
    break;
  case 32:
    // MOV32ao32, MOV32ao32_16, MOV32o32a, MOV32o32a_16, MOV64ao32, MOV64o32a
    printMemOffs32(MI, 0, O); 
    break;
  case 33:
    // MOV64ao64, MOV64o64a
    printMemOffs64(MI, 0, O); 
    break;
  case 34:
    // MOV64ao8, MOV64o8a, MOV8ao8, MOV8ao8_16, MOV8o8a, MOV8o8a_16
    printMemOffs8(MI, 0, O); 
    break;
  case 35:
    // MOVSB
    printSrcIdx8(MI, 1, O); 
    SStream_concat(O, "%s", ", "); 
    printDstIdx8(MI, 0, O); 
    return;
    break;
  case 36:
    // MOVSL
    printSrcIdx32(MI, 1, O); 
    SStream_concat(O, "%s", ", "); 
    printDstIdx32(MI, 0, O); 
    return;
    break;
  case 37:
    // MOVSQ
    printSrcIdx64(MI, 1, O); 
    SStream_concat(O, "%s", ", "); 
    printDstIdx64(MI, 0, O); 
    return;
    break;
  case 38:
    // MOVSW
    printSrcIdx16(MI, 1, O); 
    SStream_concat(O, "%s", ", "); 
    printDstIdx16(MI, 0, O); 
    return;
    break;
  case 39:
    // SHLD16rri8, SHLD32rri8, SHLD64rri8, SHRD16rri8, SHRD32rri8, SHRD64rri8
    printOperand(MI, 3, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 2, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 0, O); 
    return;
    break;
  }


  // Fragment 1 encoded into 5 bits for 24 unique commands.
  //printf("Frag-1: %"PRIu64"\n", (Bits >> 19) & 31);
  switch ((Bits >> 19) & 31) {
  default:   // unreachable.
  case 0:
    // AAD8i8, AAM8i8, BSWAP32r, BSWAP64r, CALL16r, CALL32m, CALL32r, CALL64m...
    return;
    break;
  case 1:
    // ADC16i16, ADD16i16, AND16i16, CMP16i16, IN16ri, LODSW, MOV16o16a, MOV1...
    SStream_concat(O, "%s", ", %ax"); 
    return;
    break;
  case 2:
    // ADC16mi, ADC16mi8, ADC16mr, ADD16mi, ADD16mi8, ADD16mr, AND16mi, AND16...
    printi16mem(MI, 0, O); 
    return;
    break;
  case 3:
    // ADC16ri, ADC16ri8, ADC16rm, ADC16rr, ADC32ri, ADC32ri8, ADC32rm, ADC32...
    printOperand(MI, 1, O); 
    break;
  case 4:
    // ADC16rr_REV, ADC32rr_REV, ADC64rr_REV, ADC8rr_REV, ADCX32rr, ADCX64rr,...
    printOperand(MI, 0, O); 
    break;
  case 5:
    // ADC32i32, ADD32i32, AND32i32, CMP32i32, IN32ri, LODSL, MOV32o32a, MOV3...
    SStream_concat(O, "%s", ", %eax"); 
    return;
    break;
  case 6:
    // ADC32mi, ADC32mi8, ADC32mr, ADD32mi, ADD32mi8, ADD32mr, AND32mi, AND32...
    printi32mem(MI, 0, O); 
    return;
    break;
  case 7:
    // ADC64i32, ADD64i32, AND64i32, CMP64i32, MOV64o64a, OR64i32, SBB64i32, ...
    SStream_concat(O, "%s", ", %rax"); 
    return;
    break;
  case 8:
    // ADC64mi32, ADC64mi8, ADC64mr, ADD64mi32, ADD64mi8, ADD64mr, AND64mi32,...
    printi64mem(MI, 0, O); 
    return;
    break;
  case 9:
    // ADC8i8, ADD8i8, AND8i8, CMP8i8, IN8ri, LODSB, MOV64o8a, MOV8o8a, MOV8o...
    SStream_concat(O, "%s", ", %al"); 
    return;
    break;
  case 10:
    // ADC8mi, ADC8mr, ADD8mi, ADD8mr, AND8mi, AND8mr, CMP8mi, CMP8mr, CMPXCH...
    printi8mem(MI, 0, O); 
    break;
  case 11:
    // BEXTR32rm, BEXTRI32mi, BZHI32rm, IMUL32rmi, IMUL32rmi8, RORX32mi, SARX...
    printi32mem(MI, 1, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 0, O); 
    return;
    break;
  case 12:
    // BEXTR64rm, BEXTRI64mi, BZHI64rm, IMUL64rmi32, IMUL64rmi8, RORX64mi, SA...
    printi64mem(MI, 1, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 0, O); 
    return;
    break;
  case 13:
    // CMPS16, CMPS32, CMPS64, CMPS8, ENTER, VAARG_64, VASTART_SAVE_XMM_REGS
    SStream_concat(O, "%s", ", "); 
    break;
  case 14:
    // IMUL16rmi, IMUL16rmi8
    printi16mem(MI, 1, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 0, O); 
    return;
    break;
  case 15:
    // LXADD16, XCHG16rm
    printi16mem(MI, 2, O); 
    return;
    break;
  case 16:
    // LXADD32, XCHG32rm
    printi32mem(MI, 2, O); 
    return;
    break;
  case 17:
    // LXADD64, XCHG64rm
    printi64mem(MI, 2, O); 
    return;
    break;
  case 18:
    // LXADD8, XCHG8rm
    printi8mem(MI, 2, O); 
    return;
    break;
  case 19:
    // MOV8rm_NOREX
    SStream_concat(O, "%s", "  # NOREX"); 
    return;
    break;
  case 20:
    // OUTSB, OUTSL, OUTSW
    SStream_concat(O, "%s", ", %dx"); 
    return;
    break;
  case 21:
    // SHLD16mri8, SHLD32mri8, SHLD64mri8, SHRD16mri8, SHRD32mri8, SHRD64mri8
    printOperand(MI, 5, O); 
    SStream_concat(O, "%s", ", "); 
    break;
  case 22:
    // TAILJMPd, TAILJMPd64, TAILJMPm, TAILJMPm64, TAILJMPr64
    SStream_concat(O, "%s", "  # TAILCALL"); 
    return;
    break;
  case 23:
    // XCHG16rr, XCHG32rr, XCHG64rr, XCHG8rr
    printOperand(MI, 2, O); 
    return;
    break;
  }


  // Fragment 2 encoded into 4 bits for 12 unique commands.
  //printf("Frag-2: %"PRIu64"\n", (Bits >> 24) & 15);
  switch ((Bits >> 24) & 15) {
  default:   // unreachable.
  case 0:
    // ADC16ri, ADC16ri8, ADC16rm, ADC16rr, ADC16rr_REV, ADC32ri, ADC32ri8, A...
    return;
    break;
  case 1:
    // ANDN32rm, ANDN32rr, ANDN64rm, ANDN64rr, BEXTR32rr, BEXTR64rr, BEXTRI32...
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 0, O); 
    return;
    break;
  case 2:
    // CMPS16
    printSrcIdx16(MI, 1, O); 
    return;
    break;
  case 3:
    // CMPS32
    printSrcIdx32(MI, 1, O); 
    return;
    break;
  case 4:
    // CMPS64
    printSrcIdx64(MI, 1, O); 
    return;
    break;
  case 5:
    // CMPS8
    printSrcIdx8(MI, 1, O); 
    return;
    break;
  case 6:
    // ENTER, VASTART_SAVE_XMM_REGS
    printOperand(MI, 1, O); 
    break;
  case 7:
    // MOV8mr_NOREX, MOV8rr_NOREX
    SStream_concat(O, "%s", "  # NOREX"); 
    return;
    break;
  case 8:
    // SHLD16mri8, SHRD16mri8
    printi16mem(MI, 0, O); 
    return;
    break;
  case 9:
    // SHLD32mri8, SHRD32mri8
    printi32mem(MI, 0, O); 
    return;
    break;
  case 10:
    // SHLD64mri8, SHRD64mri8
    printi64mem(MI, 0, O); 
    return;
    break;
  case 11:
    // VAARG_64
    printi8mem(MI, 1, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 6, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 7, O); 
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 8, O); 
    return;
    break;
  }


  // Fragment 3 encoded into 1 bits for 2 unique commands.
  //printf("Frag-3: %"PRIu64"\n", (Bits >> 28) & 1);
  if ((Bits >> 28) & 1) {
    // VASTART_SAVE_XMM_REGS
    SStream_concat(O, "%s", ", "); 
    printOperand(MI, 2, O); 
    return;
  } else {
    // ENTER
    return;
  }
}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
static char *getRegisterName(unsigned RegNo)
{
  // assert(RegNo && RegNo < 233 && "Invalid register number!");

#ifndef CAPSTONE_DIET
  static char AsmStrs[] = {
  /* 0 */ 's', 't', '(', '0', ')', 0,
  /* 6 */ 's', 't', '(', '1', ')', 0,
  /* 12 */ 's', 't', '(', '2', ')', 0,
  /* 18 */ 's', 't', '(', '3', ')', 0,
  /* 24 */ 's', 't', '(', '4', ')', 0,
  /* 30 */ 's', 't', '(', '5', ')', 0,
  /* 36 */ 's', 't', '(', '6', ')', 0,
  /* 42 */ 's', 't', '(', '7', ')', 0,
  /* 48 */ 'x', 'm', 'm', '1', '0', 0,
  /* 54 */ 'y', 'm', 'm', '1', '0', 0,
  /* 60 */ 'z', 'm', 'm', '1', '0', 0,
  /* 66 */ 'c', 'r', '1', '0', 0,
  /* 71 */ 'x', 'm', 'm', '2', '0', 0,
  /* 77 */ 'y', 'm', 'm', '2', '0', 0,
  /* 83 */ 'z', 'm', 'm', '2', '0', 0,
  /* 89 */ 'x', 'm', 'm', '3', '0', 0,
  /* 95 */ 'y', 'm', 'm', '3', '0', 0,
  /* 101 */ 'z', 'm', 'm', '3', '0', 0,
  /* 107 */ 'k', '0', 0,
  /* 110 */ 'x', 'm', 'm', '0', 0,
  /* 115 */ 'y', 'm', 'm', '0', 0,
  /* 120 */ 'z', 'm', 'm', '0', 0,
  /* 125 */ 'f', 'p', '0', 0,
  /* 129 */ 'c', 'r', '0', 0,
  /* 133 */ 'd', 'r', '0', 0,
  /* 137 */ 'x', 'm', 'm', '1', '1', 0,
  /* 143 */ 'y', 'm', 'm', '1', '1', 0,
  /* 149 */ 'z', 'm', 'm', '1', '1', 0,
  /* 155 */ 'c', 'r', '1', '1', 0,
  /* 160 */ 'x', 'm', 'm', '2', '1', 0,
  /* 166 */ 'y', 'm', 'm', '2', '1', 0,
  /* 172 */ 'z', 'm', 'm', '2', '1', 0,
  /* 178 */ 'x', 'm', 'm', '3', '1', 0,
  /* 184 */ 'y', 'm', 'm', '3', '1', 0,
  /* 190 */ 'z', 'm', 'm', '3', '1', 0,
  /* 196 */ 'k', '1', 0,
  /* 199 */ 'x', 'm', 'm', '1', 0,
  /* 204 */ 'y', 'm', 'm', '1', 0,
  /* 209 */ 'z', 'm', 'm', '1', 0,
  /* 214 */ 'f', 'p', '1', 0,
  /* 218 */ 'c', 'r', '1', 0,
  /* 222 */ 'd', 'r', '1', 0,
  /* 226 */ 'x', 'm', 'm', '1', '2', 0,
  /* 232 */ 'y', 'm', 'm', '1', '2', 0,
  /* 238 */ 'z', 'm', 'm', '1', '2', 0,
  /* 244 */ 'c', 'r', '1', '2', 0,
  /* 249 */ 'x', 'm', 'm', '2', '2', 0,
  /* 255 */ 'y', 'm', 'm', '2', '2', 0,
  /* 261 */ 'z', 'm', 'm', '2', '2', 0,
  /* 267 */ 'k', '2', 0,
  /* 270 */ 'x', 'm', 'm', '2', 0,
  /* 275 */ 'y', 'm', 'm', '2', 0,
  /* 280 */ 'z', 'm', 'm', '2', 0,
  /* 285 */ 'f', 'p', '2', 0,
  /* 289 */ 'c', 'r', '2', 0,
  /* 293 */ 'd', 'r', '2', 0,
  /* 297 */ 'x', 'm', 'm', '1', '3', 0,
  /* 303 */ 'y', 'm', 'm', '1', '3', 0,
  /* 309 */ 'z', 'm', 'm', '1', '3', 0,
  /* 315 */ 'c', 'r', '1', '3', 0,
  /* 320 */ 'x', 'm', 'm', '2', '3', 0,
  /* 326 */ 'y', 'm', 'm', '2', '3', 0,
  /* 332 */ 'z', 'm', 'm', '2', '3', 0,
  /* 338 */ 'k', '3', 0,
  /* 341 */ 'x', 'm', 'm', '3', 0,
  /* 346 */ 'y', 'm', 'm', '3', 0,
  /* 351 */ 'z', 'm', 'm', '3', 0,
  /* 356 */ 'f', 'p', '3', 0,
  /* 360 */ 'c', 'r', '3', 0,
  /* 364 */ 'd', 'r', '3', 0,
  /* 368 */ 'x', 'm', 'm', '1', '4', 0,
  /* 374 */ 'y', 'm', 'm', '1', '4', 0,
  /* 380 */ 'z', 'm', 'm', '1', '4', 0,
  /* 386 */ 'c', 'r', '1', '4', 0,
  /* 391 */ 'x', 'm', 'm', '2', '4', 0,
  /* 397 */ 'y', 'm', 'm', '2', '4', 0,
  /* 403 */ 'z', 'm', 'm', '2', '4', 0,
  /* 409 */ 'k', '4', 0,
  /* 412 */ 'x', 'm', 'm', '4', 0,
  /* 417 */ 'y', 'm', 'm', '4', 0,
  /* 422 */ 'z', 'm', 'm', '4', 0,
  /* 427 */ 'f', 'p', '4', 0,
  /* 431 */ 'c', 'r', '4', 0,
  /* 435 */ 'd', 'r', '4', 0,
  /* 439 */ 'x', 'm', 'm', '1', '5', 0,
  /* 445 */ 'y', 'm', 'm', '1', '5', 0,
  /* 451 */ 'z', 'm', 'm', '1', '5', 0,
  /* 457 */ 'c', 'r', '1', '5', 0,
  /* 462 */ 'x', 'm', 'm', '2', '5', 0,
  /* 468 */ 'y', 'm', 'm', '2', '5', 0,
  /* 474 */ 'z', 'm', 'm', '2', '5', 0,
  /* 480 */ 'k', '5', 0,
  /* 483 */ 'x', 'm', 'm', '5', 0,
  /* 488 */ 'y', 'm', 'm', '5', 0,
  /* 493 */ 'z', 'm', 'm', '5', 0,
  /* 498 */ 'f', 'p', '5', 0,
  /* 502 */ 'c', 'r', '5', 0,
  /* 506 */ 'd', 'r', '5', 0,
  /* 510 */ 'x', 'm', 'm', '1', '6', 0,
  /* 516 */ 'y', 'm', 'm', '1', '6', 0,
  /* 522 */ 'z', 'm', 'm', '1', '6', 0,
  /* 528 */ 'x', 'm', 'm', '2', '6', 0,
  /* 534 */ 'y', 'm', 'm', '2', '6', 0,
  /* 540 */ 'z', 'm', 'm', '2', '6', 0,
  /* 546 */ 'k', '6', 0,
  /* 549 */ 'x', 'm', 'm', '6', 0,
  /* 554 */ 'y', 'm', 'm', '6', 0,
  /* 559 */ 'z', 'm', 'm', '6', 0,
  /* 564 */ 'f', 'p', '6', 0,
  /* 568 */ 'c', 'r', '6', 0,
  /* 572 */ 'd', 'r', '6', 0,
  /* 576 */ 'x', 'm', 'm', '1', '7', 0,
  /* 582 */ 'y', 'm', 'm', '1', '7', 0,
  /* 588 */ 'z', 'm', 'm', '1', '7', 0,
  /* 594 */ 'x', 'm', 'm', '2', '7', 0,
  /* 600 */ 'y', 'm', 'm', '2', '7', 0,
  /* 606 */ 'z', 'm', 'm', '2', '7', 0,
  /* 612 */ 'k', '7', 0,
  /* 615 */ 'x', 'm', 'm', '7', 0,
  /* 620 */ 'y', 'm', 'm', '7', 0,
  /* 625 */ 'z', 'm', 'm', '7', 0,
  /* 630 */ 'c', 'r', '7', 0,
  /* 634 */ 'd', 'r', '7', 0,
  /* 638 */ 'x', 'm', 'm', '1', '8', 0,
  /* 644 */ 'y', 'm', 'm', '1', '8', 0,
  /* 650 */ 'z', 'm', 'm', '1', '8', 0,
  /* 656 */ 'x', 'm', 'm', '2', '8', 0,
  /* 662 */ 'y', 'm', 'm', '2', '8', 0,
  /* 668 */ 'z', 'm', 'm', '2', '8', 0,
  /* 674 */ 'x', 'm', 'm', '8', 0,
  /* 679 */ 'y', 'm', 'm', '8', 0,
  /* 684 */ 'z', 'm', 'm', '8', 0,
  /* 689 */ 'c', 'r', '8', 0,
  /* 693 */ 'x', 'm', 'm', '1', '9', 0,
  /* 699 */ 'y', 'm', 'm', '1', '9', 0,
  /* 705 */ 'z', 'm', 'm', '1', '9', 0,
  /* 711 */ 'x', 'm', 'm', '2', '9', 0,
  /* 717 */ 'y', 'm', 'm', '2', '9', 0,
  /* 723 */ 'z', 'm', 'm', '2', '9', 0,
  /* 729 */ 'x', 'm', 'm', '9', 0,
  /* 734 */ 'y', 'm', 'm', '9', 0,
  /* 739 */ 'z', 'm', 'm', '9', 0,
  /* 744 */ 'c', 'r', '9', 0,
  /* 748 */ 'r', '1', '0', 'b', 0,
  /* 753 */ 'r', '1', '1', 'b', 0,
  /* 758 */ 'r', '1', '2', 'b', 0,
  /* 763 */ 'r', '1', '3', 'b', 0,
  /* 768 */ 'r', '1', '4', 'b', 0,
  /* 773 */ 'r', '1', '5', 'b', 0,
  /* 778 */ 'r', '8', 'b', 0,
  /* 782 */ 'r', '9', 'b', 0,
  /* 786 */ 'r', '1', '0', 'd', 0,
  /* 791 */ 'r', '1', '1', 'd', 0,
  /* 796 */ 'r', '1', '2', 'd', 0,
  /* 801 */ 'r', '1', '3', 'd', 0,
  /* 806 */ 'r', '1', '4', 'd', 0,
  /* 811 */ 'r', '1', '5', 'd', 0,
  /* 816 */ 'r', '8', 'd', 0,
  /* 820 */ 'r', '9', 'd', 0,
  /* 824 */ 'a', 'h', 0,
  /* 827 */ 'b', 'h', 0,
  /* 830 */ 'c', 'h', 0,
  /* 833 */ 'd', 'h', 0,
  /* 836 */ 'e', 'd', 'i', 0,
  /* 840 */ 'r', 'd', 'i', 0,
  /* 844 */ 'e', 's', 'i', 0,
  /* 848 */ 'r', 's', 'i', 0,
  /* 852 */ 'a', 'l', 0,
  /* 855 */ 'b', 'l', 0,
  /* 858 */ 'c', 'l', 0,
  /* 861 */ 'd', 'l', 0,
  /* 864 */ 'd', 'i', 'l', 0,
  /* 868 */ 's', 'i', 'l', 0,
  /* 872 */ 'b', 'p', 'l', 0,
  /* 876 */ 's', 'p', 'l', 0,
  /* 880 */ 'e', 'b', 'p', 0,
  /* 884 */ 'r', 'b', 'p', 0,
  /* 888 */ 'e', 'i', 'p', 0,
  /* 892 */ 'r', 'i', 'p', 0,
  /* 896 */ 'e', 's', 'p', 0,
  /* 900 */ 'r', 's', 'p', 0,
  /* 904 */ 'c', 's', 0,
  /* 907 */ 'd', 's', 0,
  /* 910 */ 'e', 's', 0,
  /* 913 */ 'f', 's', 0,
  /* 916 */ 'f', 'l', 'a', 'g', 's', 0,
  /* 922 */ 's', 's', 0,
  /* 925 */ 'r', '1', '0', 'w', 0,
  /* 930 */ 'r', '1', '1', 'w', 0,
  /* 935 */ 'r', '1', '2', 'w', 0,
  /* 940 */ 'r', '1', '3', 'w', 0,
  /* 945 */ 'r', '1', '4', 'w', 0,
  /* 950 */ 'r', '1', '5', 'w', 0,
  /* 955 */ 'r', '8', 'w', 0,
  /* 959 */ 'r', '9', 'w', 0,
  /* 963 */ 'f', 'p', 's', 'w', 0,
  /* 968 */ 'e', 'a', 'x', 0,
  /* 972 */ 'r', 'a', 'x', 0,
  /* 976 */ 'e', 'b', 'x', 0,
  /* 980 */ 'r', 'b', 'x', 0,
  /* 984 */ 'e', 'c', 'x', 0,
  /* 988 */ 'r', 'c', 'x', 0,
  /* 992 */ 'e', 'd', 'x', 0,
  /* 996 */ 'r', 'd', 'x', 0,
  /* 1000 */ 'e', 'i', 'z', 0,
  /* 1004 */ 'r', 'i', 'z', 0,
  };

  static const uint32_t RegAsmOffset[] = {
    824, 852, 969, 827, 855, 881, 872, 977, 830, 858, 904, 985, 833, 837, 
    864, 861, 907, 993, 968, 880, 976, 984, 836, 992, 916, 888, 1000, 910, 
    844, 896, 963, 913, 919, 889, 972, 884, 980, 988, 840, 996, 892, 1004, 
    848, 900, 845, 868, 897, 876, 922, 129, 218, 289, 360, 431, 502, 568, 
    630, 689, 744, 66, 155, 244, 315, 386, 457, 133, 222, 293, 364, 435, 
    506, 572, 634, 125, 214, 285, 356, 427, 498, 564, 107, 196, 267, 338, 
    409, 480, 546, 612, 111, 200, 271, 342, 413, 484, 550, 616, 690, 745, 
    67, 156, 245, 316, 387, 458, 0, 6, 12, 18, 24, 30, 36, 42, 
    110, 199, 270, 341, 412, 483, 549, 615, 674, 729, 48, 137, 226, 297, 
    368, 439, 510, 576, 638, 693, 71, 160, 249, 320, 391, 462, 528, 594, 
    656, 711, 89, 178, 115, 204, 275, 346, 417, 488, 554, 620, 679, 734, 
    54, 143, 232, 303, 374, 445, 516, 582, 644, 699, 77, 166, 255, 326, 
    397, 468, 534, 600, 662, 717, 95, 184, 120, 209, 280, 351, 422, 493, 
    559, 625, 684, 739, 60, 149, 238, 309, 380, 451, 522, 588, 650, 705, 
    83, 172, 261, 332, 403, 474, 540, 606, 668, 723, 101, 190, 778, 782, 
    748, 753, 758, 763, 768, 773, 816, 820, 786, 791, 796, 801, 806, 811, 
    955, 959, 925, 930, 935, 940, 945, 950, 
  };

  //int i;
  //for (i = 0; i < sizeof(RegAsmOffset)/4; i++)
  //     printf("%s = %u\n", AsmStrs+RegAsmOffset[i], i + 1);
  //printf("*************************\n");
  return AsmStrs+RegAsmOffset[RegNo-1];
#else
  return NULL;
#endif
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

static char *printAliasInstr(MCInst *MI, SStream *OS, void *info)
{
  #define GETREGCLASS_CONTAIN(_class, _reg) MCRegisterClass_contains(MCRegisterInfo_getRegClass(MRI, _class), MCOperand_getReg(MCInst_getOperand(MI, _reg)))
  const char *AsmString;
  // MCRegisterInfo *MRI = (MCRegisterInfo *)info;
  switch (MCInst_getOpcode(MI)) {
  default: return 0;
  case X86_AAD8i8:
    if (MCInst_getNumOperands(MI) == 1 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 10) {
      // (AAD8i8 10)
      AsmString = "aad";
      break;
    }
    return 0;
  case X86_AAM8i8:
    if (MCInst_getNumOperands(MI) == 1 &&
        MCOperand_isImm(MCInst_getOperand(MI, 0)) &&
        MCOperand_getImm(MCInst_getOperand(MI, 0)) == 10) {
      // (AAM8i8 10)
      AsmString = "aam";
      break;
    }
    return 0;
  case X86_XSTORE:
    if (MCInst_getNumOperands(MI) == 0) {
      // (XSTORE)
      AsmString = "xstorerng";
      break;
    }
    return 0;
  }

  char *tmp = cs_strdup(AsmString), *AsmMnem, *AsmOps;
  AsmMnem = tmp;
  AsmOps = strchr(tmp, ' ');
  if (AsmOps) {
    *AsmOps = '\0';
    AsmOps += 1;
  }
  SStream_concat(OS, "%s", AsmMnem);
  if (AsmOps) {
    SStream_concat(OS, "\t");
    char *c;
    for (c = AsmOps; *c; c++) {
      if (*c == '$') {
        c += 1;
        printOperand(MI, *c - 1, OS);
      } else {
        SStream_concat(OS, "%c", *c);
      }
    }
  }
  return tmp;
}

#endif // PRINT_ALIAS_INSTR
